<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/posts/</link><description>Recent content in Posts on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Sun, 02 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>feeling under the weather</title><link>https://cuisiting.github.io/posts/cuisiting/feeling-under-the-weather/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/feeling-under-the-weather/</guid><description>Winter Blues - feeling under the weather? | Active Medical &amp;ldquo;Under the weather&amp;rdquo; 是一种常用的英语成语，用来形容一个人感觉不舒服或生病。
这个表达通常指轻微的不适，如感冒或头痛，而不是严重的病症。
起源上，这个短语可能与航海有关，在恶劣天气中，船员会感到不适。
如今，它广泛用于日常对话中，来表达身体或情绪上的不适。</description></item><item><title>OLAP Piont</title><link>https://cuisiting.github.io/posts/cuisiting/olap-piont/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/olap-piont/</guid><description>distributed OLAP datastore
Online Analytical Processing
在线分析处理
Pinot is a real-time distributed OLAP datastore, built to deliver scalable real-time analytics with low latency. It can ingest from batch data sources (such as Hadoop HDFS, Amazon S3, Azure ADLS, Google Cloud Storage) as well as stream data sources (such as Apache Kafka).
Pinot was built by engineers at LinkedIn and Uber and is designed to scale up and out with no upper bound.</description></item><item><title>查询字幕学英语</title><link>https://cuisiting.github.io/posts/cuisiting/%E6%9F%A5%E8%AF%A2%E5%AD%97%E5%B9%95%E5%AD%A6%E8%8B%B1%E8%AF%AD/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E6%9F%A5%E8%AF%A2%E5%AD%97%E5%B9%95%E5%AD%A6%E8%8B%B1%E8%AF%AD/</guid><description>Under The Weather | 285 pronunciations of Under The Weather in English (youglish.com) 仅限youtube 资源
under the weather - YARN search (getyarn.io) 缺点：没有上下文
https://memes.getyarn.io/yarn-find?text=under%20the%20weather&amp;p=0 PlayPhrase.me: Site for cinema archaeologists. 付费
under the weather (filmot.com) https://www.91dict.com/words?w=weather Pronunciations for Desert in English (from desert pupfish to I was deserted - left behind in the vast desert.) (forvo.com)</description></item><item><title>英语介词 English Preposition</title><link>https://cuisiting.github.io/posts/cuisiting/english%E4%BB%8B%E8%AF%8D/</link><pubDate>Mon, 22 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/english%E4%BB%8B%E8%AF%8D/</guid><description>english-grammar-revolution.com PREPOSITIONS (towson.edu)</description></item><item><title>Hadoop Architecture</title><link>https://cuisiting.github.io/posts/cuisiting/hadooparchitecture/</link><pubDate>Tue, 11 Apr 2023 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/hadooparchitecture/</guid><description>keyword: Hadoop, big data, AI, Architecture
Hadoop Architecture .
Apache Hadoop has the following three layers of Architecture.
Map-Reduce
YARN
HDFS
Map-Reduce YARN
HDFS</description></item><item><title>Flow Diagram</title><link>https://cuisiting.github.io/posts/cuisiting/flowdiagram/</link><pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/flowdiagram/</guid><description>keyword: Flow Diagram, product , efficiency, 工程效率
最好的 流程图 架构图 软件</description></item><item><title>Docker</title><link>https://cuisiting.github.io/posts/cuisiting/docker/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/docker/</guid><description>keyword: Docker
What is the difference between Docker Desktop for Linux and Docker Engine? Docker Desktop 和 Docker Engine 的区别 Install docker for debian Install using the apt repository # Add Docker&amp;#39;s official GPG key: sudo apt-get update sudo apt-get install ca-certificates curl gnupg sudo install -m 0755 -d /etc/apt/keyrings curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg sudo chmod a+r /etc/apt/keyrings/docker.gpg # Add the repository to Apt sources: echo \ &amp;#34;deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.</description></item><item><title>Aws Shadowsocket</title><link>https://cuisiting.github.io/posts/cuisiting/awsshadowsocket/</link><pubDate>Fri, 10 Mar 2023 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/awsshadowsocket/</guid><description>keyword: AWS instance
创建key 用于 ssh 鉴权登陆
创建成功后，查看instance Details ip , ssh 登陆
chmod 400 [your pem path] ssh -i [your pem path] admin@your_ip 安装 shadowsocket docker docker pull shadowsocks/shadowsocks-libev 指定 shadowsocks container 的端口，检查你的云服务是否开启了该端口
启动 docker instance
检查你的云服务是否开启了该端口
ps=&amp;lt;你的密码&amp;gt; port=&amp;lt;你的端口&amp;gt; docker run -e PASSWORD=$ps -p $port:8388 -p $port:8388/udp -d --restart always shadowsocks/shadowsocks-libev</description></item><item><title>Alfred Script Filter</title><link>https://cuisiting.github.io/posts/cuisiting/script_filter_k_link/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/script_filter_k_link/</guid><description>keyword: Alfred, Script, Filter
在配置Alfred Script Filter 时,
若要打开的文件路径 为
/Users/your_user/Library/Application\ Support/xxxxxx 这类中间带有空格的路径, Alfred 将不能正常打开
{ &amp;#34;uid&amp;#34;: &amp;#34;kconfig&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;file&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;k config&amp;#34;, &amp;#34;subtitle&amp;#34;: &amp;#34;~/Desktop&amp;#34;, &amp;#34;arg&amp;#34;: [&amp;#34;vscode&amp;#34;, &amp;#34;/Users/your_user/toolchain/MyShell/Alfred/script_filter_k_link/info.plist&amp;#34;], &amp;#34;autocomplete&amp;#34;: &amp;#34;Desktop&amp;#34;, &amp;#34;icon&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;fileicon&amp;#34;, &amp;#34;path&amp;#34;: &amp;#34;~/Desktop&amp;#34; } }, 解决办法:
为 上述文件创建文件链接
格式：ln [原文件] [硬链接文件]</description></item><item><title>hugo-theme-learn 不支持 shortcode</title><link>https://cuisiting.github.io/posts/cuisiting/hugo-theme-learn%E4%B8%8D%E6%94%AF%E6%8C%81shortcode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/hugo-theme-learn%E4%B8%8D%E6%94%AF%E6%8C%81shortcode/</guid><description>hugo-theme-learn 不支持 shortcode 按照 Hugo 官方关于自定义 shortcode 文档 https://gohugo.io/templates/shortcode-templates/ 设置如下 :
在 layouts/shortcodes 创建文件，并添加
&amp;lt;!-- rawhtml --&amp;gt; {{.Inner}} 在Test.md 中添加 图片
结果：不能将 中的内容原样作为标签显示</description></item><item><title>Installation</title><link>https://cuisiting.github.io/posts/cuisiting/my2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/my2/</guid><description>The following steps are here to help you initialize your new website. If you don&amp;rsquo;t know Hugo at all, we strongly suggest you learn more about it by following this great documentation for beginners .
Create your project Hugo provides a new command to create a new website.
hugo new site &amp;lt;new_project&amp;gt; Install the theme Install the Hugo-theme-learn theme by following this documentation This theme&amp;rsquo;s repository is: https://github.com/matcornic/hugo-theme-learn.git Alternatively, you can download the theme as .</description></item><item><title>macos inputmethod auto switch</title><link>https://cuisiting.github.io/posts/cuisiting/macos_inputmethod_auto_switch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/macos_inputmethod_auto_switch/</guid><description>keyword: macos, inputmethod ,auto ,switch
InputSourceSelector # 查看 InputSourceSelector list # 切换 InputSourceSelector select</description></item><item><title>SideIdea</title><link>https://cuisiting.github.io/posts/cuisiting/sideidea/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/sideidea/</guid><description>keyword: 副业,idea,
SideIdea</description></item><item><title>Spark Architecture</title><link>https://cuisiting.github.io/posts/cuisiting/spark/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/spark/</guid><description>keyword: Spark, big date ,AI, Architecture
Spark Architecture .</description></item><item><title>Spark&amp;Hadoop</title><link>https://cuisiting.github.io/posts/cuisiting/sparkhadoop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/sparkhadoop/</guid><description>keyword: Hadopp, Spark, big data, AI, Architecture
Case Study 1 .
Case Study 2 .
Case Study 3 .
Case Study 4 Hadoop vs Spark: 使用场景 Hadoop 使用场景 Hadoop 适合以下场景：
大规模数据存储和处理: 当需要处理 PB 级别的数据时，Hadoop 的 HDFS 提供了一个可靠的存储解决方案。 高吞吐量的批处理作业: 对于需要高吞吐量而不是低延迟的长时间运行的批处理作业，Hadoop 是理想的选择。 成本效益的解决方案: 对于预算有限的项目，Hadoop 的开源特性使其成为一种成本效益高的选择。 兼容性和成熟的生态系统: Hadoop 已经成熟，拥有一个庞大的生态系统，适用于各种数据处理需求。 Spark 使用场景 Spark 适合以下场景：
快速数据处理和实时分析: 当需要快速处理数据或进行实时数据分析时，Spark 的内存计算功能提供了显著的速度优势。 迭代算法和机器学习: 对于需要迭代计算的机器学习算法，Spark 的内存计算比 Hadoop 更高效。 多种数据处理格式: 如果需要支持多种数据处理方式（批处理、流处理、交互式查询、机器学习），Spark 提供了一站式解决方案。 高级分析: Spark 支持 SQL 查询、流处理和复杂的分析，这些在 Hadoop MapReduce 中不那么容易实现。 根据项目需求和资源情况，可以选择适合的框架。在某些复杂的项目中，Hadoop 和 Spark 可以并行使用，以充分利用两者的优势。</description></item><item><title>不花钱 ！搭建Blog！Hugo&amp;GithubAction</title><link>https://cuisiting.github.io/posts/cuisiting/%E4%B8%8D%E8%8A%B1%E9%92%B1-%E6%90%AD%E5%BB%BAbloghugogithubaction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E4%B8%8D%E8%8A%B1%E9%92%B1-%E6%90%AD%E5%BB%BAbloghugogithubaction/</guid><description>环境要求 git
开始盖别墅 安装hugo Hugo 官方安装：https://gohugo.io/installation/ 用hugo 命令 创建 后台工程，相当于系统后台，用于编辑Blog hugo new site MyBlog cd MyBlog git init # 安装主题 git submodule add git@github.com:cuisiting/ hugo-theme-learn.git themes/hugo-theme-learn # 指定主题 echo &amp;#34;theme = &amp;#39;hugo-theme-learn&amp;#39;&amp;#34; &amp;gt;&amp;gt; hugo.toml # 部署到本地查看一下 hugo server 至此，我们在本地电脑上，创建一个hugo 工程来存储blog 文件
小练习：增加一篇Blog，按如下的目录结构 添加文件 ，注意 需要创建 _index.md &amp;amp; 格式
RootProject └──content/ ├── _index.md └── 个人随想 ├── _index.md └── my_first.md 3. 如上，我们在本地电脑上，创建一个 工程MyBlog 来存储blog 文件。
4. 但是我们最终是需要将Blog 发布到 自由 、广大的互联网上。
5. 现在我们用一种成本最小，但体验极佳的方式 将我们的Blog发布</description></item><item><title>好产品, StepNpull, 卫生间</title><link>https://cuisiting.github.io/posts/cuisiting/stepnpull/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/stepnpull/</guid><description>StepNpul
每次上完卫生间洗完手，在用手开门把手 总感觉白洗这个手了。
有这这个脚开门把手真的舒服。在流感 COVID-19 期间很有用
《飞行家》片段 莱昂纳多严重洁癖厕所疯狂洗手
场景 1 场景 2</description></item><item><title>湾区好公司</title><link>https://cuisiting.github.io/posts/cuisiting/%E6%B9%BE%E5%8C%BA%E5%A5%BD%E5%85%AC%E5%8F%B8/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E6%B9%BE%E5%8C%BA%E5%A5%BD%E5%85%AC%E5%8F%B8/</guid><description>keyword: 亚麻,八卦, 湾区,
湾区好公司 https://www.intuit.com/ https://www.levels.fyi/companies/intuit/salaries https://www.adobe.com/ https://www.levels.fyi/companies/adobe/salaries</description></item><item><title>英语书面语缩写</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E4%B9%A6%E9%9D%A2%E8%AF%AD%E7%BC%A9%E5%86%99/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E4%B9%A6%E9%9D%A2%E8%AF%AD%E7%BC%A9%E5%86%99/</guid><description>keyword: 英语,书面语,缩写,
ASAP as soon as possible 通常用于书面和口语交流中，意味着希望某事能尽快完成或希望对方能够迅速响应 RSVP Respond, if it pleases you 通常用在邀请函中，请求收件人回复他们是否会出席所邀请的活动。这是一种礼仪性的请求，意在让举办者知道预期的出席人数，以便相应地做好准备 RSVP wikipedia RITM Request Item 一般用于IT 支持服务, 非通用</description></item><item><title>设置HugoMarkdown图片大小</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%AE%BE%E7%BD%AEhugomarkdown%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%AE%BE%E7%BD%AEhugomarkdown%E5%9B%BE%E7%89%87%E5%A4%A7%E5%B0%8F/</guid><description>https://gohugo.io/templates/render-hooks/ &amp;lt;!-- 解析alt中的图片参数 --&amp;gt; {{- $image_para := &amp;#34;&amp;#34; -}} {{ warnf &amp;#34;Image parameters alt: %s&amp;#34; $alt -}} {{- $splitAlt := split $alt &amp;#34;#&amp;#34; -}} {{- if gt (len $splitAlt) 1 -}} {{- $image_para = index $splitAlt 1 -}} {{- end -}} {{ warnf &amp;#34;Image parameters splitAlt: %s&amp;#34; $splitAlt -}} {{- $image_para_json := dict -}} {{- if ne $image_para &amp;#34;&amp;#34; -}} {{- $params := split $image_para &amp;#34;&amp;amp;amp;&amp;#34; -}} {{- range $params -}} {{- $keyVal := split .</description></item><item><title>程序员不能没有自己的网站，就像西方不能没有耶路撒冷</title><link>https://cuisiting.github.io/posts/cuisiting/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E8%83%BD%E6%B2%A1%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99%E5%B0%B1%E5%83%8F%E8%A5%BF%E6%96%B9%E4%B8%8D%E8%83%BD%E6%B2%A1%E6%9C%89%E8%80%B6%E8%B7%AF%E6%92%92%E5%86%B7/</link><pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%8D%E8%83%BD%E6%B2%A1%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E7%BD%91%E7%AB%99%E5%B0%B1%E5%83%8F%E8%A5%BF%E6%96%B9%E4%B8%8D%E8%83%BD%E6%B2%A1%E6%9C%89%E8%80%B6%E8%B7%AF%E6%92%92%E5%86%B7/</guid><description>买域名 中文名 英文名 链接地址 主页 Home Page https://www.namesilo.com/?rid=03c3e55au 域搜索页面 Domain Search Page https://www.namesilo.com/domain/search-domains?rid=03c3e55au 定价页 Pricing Page https://www.namesilo.com/pricing?rid=03c3e55au 网站托管 &amp;amp; 部署 托管: 一般是静态网站
部署：一般是具有后台计算的服务
Cloudflare 不想流量被打爆，就上它</description></item><item><title>MTBI</title><link>https://cuisiting.github.io/posts/cuisiting/mtbi/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/mtbi/</guid><description>Test Free Personality Test | 16Personalities 免费性格测试 | 16Personalities MBTI 四个维度的对比表格 维度 选项 A 选项 B 外向 (E) vs. 内向 (I) 从外界环境和与人交往中获取能量，
喜欢与人互动和交流。 从内在世界和独处中获取能量，
更喜欢独自思考和工作。 感觉 (S) vs. 直觉 (N) 注重现实和具体的细节，
喜欢依赖实际的经验和信息。 注重未来和可能性，
喜欢依赖直觉和抽象的概念 思考 (T) vs. 情感 (F) 做决定时倾向于逻辑和客观分析，
注重事实和原则。 做决定时倾向于考虑情感和
个人价值观，
注重人际关系和和谐。 判断 (J) vs. 知觉 (P) 喜欢计划和组织，
有条理，喜欢确定性和结构。 喜欢灵活和自发，开放，
喜欢探索和适应变化。</description></item><item><title>超燃音乐</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%B6%85%E7%87%83%E9%9F%B3%E4%B9%90/</link><pubDate>Sun, 05 May 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%B6%85%E7%87%83%E9%9F%B3%E4%B9%90/</guid><description> 歌曲名字 AppleMusic DouYin ‎Levels - Song by JordanBeats ‎Levels - Song by JordanBeats - Apple Music 发现更多精彩视频 - 抖音搜索 (douyin.com)</description></item><item><title>US Bank</title><link>https://cuisiting.github.io/posts/cuisiting/us-bank/</link><pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/us-bank/</guid><description>Feature / Type ACH Transfer
ACH转账 Global ACH
全球ACH转账 Wire Transfer
电汇 Direct Deposit
直接存款 Speed
速度 Usually 1-2 business days
通常1-2个工作日 1-5 business days, depending on the country
1-5个工作日，取决于国家 Several hours to 1 business day
数小时到1个工作日 Usually within 1 business day
通常在1个工作日内 Fees
费用 Low to none
低至无费用 Moderate, varies by country
中等费用，根据国家而异 High
高费用 None or very low
无费用或很低费用 Geographic Scope
适用范围 Domestic
国内支付 International
国际支付 Domestic and international</description></item><item><title>2024年美国人去日本度假看经济</title><link>https://cuisiting.github.io/posts/cuisiting/2024%E5%90%8C%E4%BA%8B%E5%8E%BB%E6%97%A5%E6%9C%AC%E5%BA%A6%E5%81%87-%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3%E6%97%A5%E6%9C%AC%E7%BB%8F%E6%B5%8E/</link><pubDate>Fri, 19 Apr 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/2024%E5%90%8C%E4%BA%8B%E5%8E%BB%E6%97%A5%E6%9C%AC%E5%BA%A6%E5%81%87-%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3%E6%97%A5%E6%9C%AC%E7%BB%8F%E6%B5%8E/</guid><description>![[japen_in_map_1.png]]
美国同事去日本度假了，大约2周。
好奇为什么他们对日本感兴趣？
如果汇率变了，日元贬值了，他们的无价不会涨来对抗吗？
&amp;hellip; &amp;hellip;
查阅了一些资料，回顾了美日的恩怨情仇。
国家发展和改革委员会 的一篇文章记录和分析的很有参考价值。 世界银行汇率数据 经济政治不分家!!!
2024年04月19日数据
Official exchange rate (LCU per US$, period average) - Japan | Data (worldbank.org) 日元汇率与战后日本经济发展 作者: 中华人民共和国国家发展和改革委员会
【日元汇率与战后日本经济发展】-国家发展和改革委员会 (ndrc.gov.cn) 时间 事件 内容 好处 坏处 动机 1948年底 国民经济复苏 日本经济开始从战争废墟中恢复。 奠定了日后经济发展的基础。 战后日本急需重建经济基础，恢复国内生产和市场活动。 1949年初 道奇计划实施 美国财政专家道奇在日本实行财政紧缩政策，恢复市场价格机制。 为日本经济的长期增长提供了良好的市场经济环境。 旨在控制战后的高通胀，恢复经济稳定，为自由市场经济打基础。 1949年4月 固定汇率制实施 日元兑美元官方汇率设为360：1。 提供了出口竞争力，使日本的出口产业和国际贸易显著增长。 稳定汇率，增强出口竞争力，促进经济快速发展。 1950年 朝鲜战争开始 朝鲜战争的特需刺激了日本的设备投资和出口增长。 经济快速增长，国民生活水平迅速提高。 利用军事冲突带来的特需，加速国家的工业化进程和经济发展。 1971年 布雷顿森林体系崩溃 日元放弃与美元挂钩，开始实行浮动汇率制。 为日本产业国际竞争力的进一步提升和经济自由化铺平道路。 应对国际金融环境的变化，提高经济的灵活性和自主性。 1971年12月 日元升值 日元兑美元汇率从360：1调整到306：1，升值16.9%。 降低了日本产品的国际价格，加强了出口竞争力。 应对美国的压力，减少对美国市场的出口依赖，实现经济更平衡的发展。 1973-1978年 日元汇率稳步升值 日元年平均汇率从1美元兑272.19日元上升到1978年的210日元。 日本经济从高速增长转向稳定增长阶段，电子产业和电器产业迅速发展。 反映了经济基本面的改善，促进国内产业结构的优化和升级。 1985年 广场协议签署 五国集团在纽约广场饭店达成协议，共同干预汇市，引导美元贬值。 日元急剧升值，刺激日本经济结构调整，增加对外直接投资和能源进口。 日元升值对出口行业造成冲击。 应对美国贸易赤字扩大和国际贸易不平衡的压力，同时促进日本经济向更高技术和资本密集型产业转型。 1990年代初 泡沫经济破裂 日本股市和房地产市场崩盘，引发经济长期停滞。 银行体系和信用体系遭受重创，企业和家庭财富缩水，经济萧条。 经济过热及监管不足导致市场泡沫积累及最终破裂。 1997年 亚洲金融危机 日本政府任由日元大幅贬值，尝试通过贬值刺激经济回升。 日元贬值未能有效刺激经济，经济衰退继续加深。 试图刺激出口和经济增长，减轻金融危机的影响。 1995年 强势美元政策 日本政府应对美国实施的强势美元政策，导致日元走弱。 日元走弱未能显著提升出口，与紧缩财政政策相抵消，未能有效刺激经济。 对抗美国的货币政策，保持出口竞争力。 1990年代后期 汇率政策调整 日本政府干预汇市，维持日元汇率在较低水平，同时恢复扩张性财政政策，刺激国内需求。 短期内日元汇率稳定。 长期则未能避免经济长时间的低迷。 应对经济衰退，尝试恢复经济活力和国内需求。 2002年下半年 经济出现转机 日本经济指标改善，政策调整开始见效。 日本经济开始逐渐恢复，结束长期的经济停滞。 政策调整和国际市场环境改善共同作用，促进经济复苏。</description></item><item><title>英语-语言 Snippet</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD-%E8%AF%AD%E8%A8%80-snippet/</link><pubDate>Tue, 09 Apr 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD-%E8%AF%AD%E8%A8%80-snippet/</guid><description>上学
上课
上班
打电话
Up for a run today?</description></item><item><title>Jupyter</title><link>https://cuisiting.github.io/posts/cuisiting/jupyter/</link><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/jupyter/</guid><description>在jupter 中显示进度 import pandas as pd from bs4 import BeautifulSoup # 假设 parseHtml 已经定义 # 在 Jupyter Notebook 中使用 tqdm 需要引入特定的模块 from tqdm.notebook import tqdm # 假设 df 是你的 DataFrame for index, row in tqdm(df.iterrows(), total=df.shape[0]): word = row[&amp;#34;Word&amp;#34;] print(&amp;#34;--------------------&amp;#34;) print(word) for ele in parseHtml(word): # 从 ele 中查找子元素 if ele.parent.parent.parent.find(&amp;#39;span&amp;#39;, class_=&amp;#39;pos dpos&amp;#39;) is not None: print(&amp;#34;-------------------- &amp;#34;) print(ele) print(ele.parent.parent.parent.find(&amp;#39;span&amp;#39;, class_=&amp;#39;pos dpos&amp;#39;).text) else: print(&amp;#34;None found.&amp;#34;) IProgress not found Question IProgress not found.</description></item><item><title>语言学</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E6%A6%82%E5%BF%B5/</link><pubDate>Sat, 06 Apr 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E6%A6%82%E5%BF%B5/</guid><description>Oxford Languages and Google - English | Oxford Languages (oup.com) This dictionary is regularly updated with evidence from one of the world’s largest lexical research programmes, and features over 350,000 words and phrases.
语言中的概念 词类 词类 名词 名词的复数形式 **动词 ** 动词的现在分词形式 动词的过去式形式 动词的过去分词形式 **形容词 ** **副词 ** 代词 介词 连词 感叹词 概念 名词 中文例子 英文例子 单词 Word 水（shuǐ） Water 汉字 Chinese character 爱（ài） Love (as a concept, not direct translation) 成语 Idiom 亡羊补牢（wáng yáng bǔ láo） A stitch in time saves nine 短语 Phrase 打开窗户（dǎ kāi chuāng hù） Open the window 一词多义 Polysemy 银行（yín háng） Bank (river bank/financial institution) 同音词 Homophone 海（hǎi）/还（hái） Night/knight 同义词 Synonym 快乐（kuài lè）/高兴（gāo xìng） Happy/glad 反义词 Antonym 大（dà）/小（xiǎo） Big/small 偏义词 Polyseme 银行（yín háng） Bank (river bank/financial institution) 借词 Loanword 沙发（shā fā） Kindergarten (from German) 外来词 Foreign word 咖啡（kā fēi） Ballet (from French) 造词 Neologism 网购（wǎng gòu） Blog (web + log) 复合词 Compound word 火车头（huǒ chē tóu） Snowman (snow + man) 缩略词 Acronym 雷达（léi dá） NASA (National Aeronautics and Space Administration) 转义词 Metaphor 网络冲浪（wǎng luò chōng làng） Mouse (for computer device) 多义词 Polysemous word 头（tóu） Right (correct/direction) 专有名词 Proper noun 北京（Běi jīng） Washington 量词 Measure word 一杯水（yī bēi shuǐ） Three pieces of paper 代词 Pronoun 他（tā） She 介词 Preposition 在（zài） Under 连词 Conjunction 而且（ér qiě） And 助词 Particle 了（le） - (No direct equivalent in English) 英语中，一个名词有几种形式 形式 示例 单数形式 dog 复数形式 dogs 所有格形式 dog&amp;rsquo;s 零冠词形式 dog 不同类型的名词 示例 不可数名词 water 可数名词 chair 抽象名词 love 具体名词 table 英语中，一个动词有几种形式 形式 英文名 例子1 例子2 使用场景 形成规则 例外规则 基本形式 Base Form run go 普通陈述句、命令 词干形式 有些不规则动词 第三人称单数形式 Third Person Singular Form runs goes 第三人称单数陈述句 原形+ -s 或 -es 以 s, sh, ch, x, o 结尾加 es 现在分词形式 Present Participle running going 进行中的动作 原形+ -ing 以不发音 e 结尾去 e 加 ing 过去式形式 Past Simple ran went 过去的动作 不规则变化 不规则动词 过去分词形式 Past Participle run gone 完成的动作 不规则变化 不规则动词 进行时态形式 is running, are running is going, are going 正在进行的动作 be 动词 + 现在分词 - 完成时态形式 have run, has run have gone, has gone 已经完成的动作 have/has + 过去分词 - 被动语态形式 is run, was run is eaten, was eaten 被动表达式 be 动词 + 过去分词 - 单词类型/Part of Speech 英文名 中文解释 中文名 1 Abbreviation 缩短形式的词或短语，用来简化书写和表达 缩写 2 Adjective 用来描述或修饰名词的词 形容词 3 Adverb 用来修饰动词、形容词或其他副词，表示方式、地点、时间或程度的词 副词 4 Auxiliary Verb 与主动词一起使用，以显示时间、情态或语态 助动词 5 Conjunction 用来连接词、短语或句子的词 连词 6 Determiner 用来限定名词，指出参照对象的具体性或数量 冠词 7 Exclamation 用来表达强烈感情或反应的词，通常独立使用 感叹词 8 Modal Verb 一类助动词，表示可能性、能力、许可或义务 情态动词 9 Noun 用来标识人、地方、事物或观念的词 名词 10 Noun or Exclamation 某些词可以作为名词或用来表达感叹 名词或感叹词 11 Number 表示数量的词或符号 数字 12 Ordinal Number 表示顺序的数字或词 序数词 13 Phrasal Verb 由动词加上介词或副词构成的短语，意义通常与单独的动词不同 短语动词 14 Predeterminer 放在冠词或指示代词前的词，用来进一步限定名词 前限定词 15 Prefix 加在单词前面，用来改变单词含义的词素 前缀 16 Preposition 放在名词或代词前，用来表示它们与句子其他部分的关系的词 介词 17 Pronoun 用来代替名词的词 代词 18 Short Form 通常指词或短语的缩写或简化形式，用于非正式场合或以简化的方式表达 简略形式 19 Suffix 加在单词后面，用来改变词性或含义的词素 后缀 20 Symbol 用作标点或其他标记的符号，用于组织和澄清语言 符号 21 Verb 表示动作、事件或状态的词 动词 data structure { &amp;#34;word&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;Part_of_Speech&amp;#34;:[ &amp;#34;noun&amp;#34;, &amp;#34;verb&amp;#34; ], &amp;#34;noun_plural&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;verb_Base_Form&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;verb_Third_Person_Singular_Form&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;verb_Present_Participle&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;verb_Past_Simple&amp;#34;:&amp;#34;&amp;#34;, &amp;#34;verb_Past_Participle&amp;#34;:&amp;#34;&amp;#34; }</description></item><item><title>Hugo定制Issue</title><link>https://cuisiting.github.io/posts/cuisiting/hugo%E5%AE%9A%E5%88%B6%E4%B8%AD%E7%9A%84issue/</link><pubDate>Thu, 28 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/hugo%E5%AE%9A%E5%88%B6%E4%B8%AD%E7%9A%84issue/</guid><description> issue Solution</description></item><item><title>语言的XX 等时性</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%AF%AD%E8%A8%80%E7%9A%84xx-%E7%AD%89%E6%97%B6%E6%80%A7/</link><pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%AF%AD%E8%A8%80%E7%9A%84xx-%E7%AD%89%E6%97%B6%E6%80%A7/</guid><description> 等时性 Isochrony
节奏类型 英文名 定义 代表语言 重音等时性 Stress-timed 说话者努力在重音之间保持大致相同的时间间隔，不论音节的数量。 英语、德语、荷兰语 音节等时性 Syllable-timed 每个音节大致占用相同的时间，使得语言听起来节奏均匀。 普通话、西班牙语、法语、意大利语 音段等时性 Mora-timed 语言的韵律单位是摩拉，每个摩拉的时间长度尽可能一致，音节的长短取决于包含的摩拉数。 日语 节奏类型 定义 代表语言 重音等时性 说话者努力在重音之间保持大致相同的时间间隔，不论音节的数量。 英语、德语、荷兰语 音节等时性 每个音节大致占用相同的时间，使得语言听起来节奏均匀。 汉语、普通话、西班牙语、法语、意大利语 音段等时性 语言的韵律单位是摩拉，每个摩拉的时间长度尽可能一致，音节的长短取决于包含的摩拉数。 日语 重音等时性(Stress-timed ) Language Matters: The Stress-timed Rhythm of English (languageinstinct.blogspot.com) ![[language_stress_timed_1.png]]
单词有重读音节和非重读音节，
重读音节之间的时长基本相等。
英语的节奏和&amp;quot;等时性&amp;quot;(这才是中式英语的罪魁祸首!) (youtube.com) 语言地图 &amp;mdash; Linguistic Maps (tumblr.com)</description></item><item><title>食用油 烟点</title><link>https://cuisiting.github.io/posts/cuisiting/%E9%A3%9F%E7%94%A8%E6%B2%B9-%E7%83%9F%E7%82%B9/</link><pubDate>Sun, 17 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E9%A3%9F%E7%94%A8%E6%B2%B9-%E7%83%9F%E7%82%B9/</guid><description> English Name 中文名 摄氏度 华氏度 Refined Avocado Oil 精制鳄梨油 271°C 520ºF Safflower Oil 红花籽油 266ºC 510ºF Rice Bran Oil 米糠油 254ºC 450ºF Refined or Light Olive Oil 精制或轻质橄榄油 240ºC 465ºF Soybean Oil 大豆油 232ºC 450ºF Peanut Oil 花生油 232ºC 450ºF Ghee or Clarified Butter 酥油或澄清黄油 232ºC 450ºF Corn Oil 玉米油 232ºC 450ºF Refined Coconut Oil 精制椰子油 232ºC 450ºF Sunflower Oil 葵花籽油 232ºC 450ºF Refined Sesame Oil 精制芝麻油 210ºC 410ºF Vegetable Oil 植物油 204-232ºC 400-450ºF Beef Tallow 牛油 204ºC 400ºF Canola Oil 菜籽油 204ºC 400ºF Grapeseed Oil 葡萄籽油 199ºC 390ºF Unrefined or Virgin Avocado Oil 未精制或初榨鳄梨油 190ºC 375ºF Pork Fat or Lard 猪油 188ºC 370ºF Chicken Fat or Schmaltz 鸡油或猪油 190ºC 375ºF Duck Fat 鸭油 190ºC 375ºF Vegetable Shortening 植物起酥油 182ºC 360ºF Unrefined Sesame Oil 未精制芝麻油 177ºC 350ºF Extra Virgin or Unrefined Coconut Oil 初榨或未精制椰子油 177ºC 350ºF Extra Virgin Olive Oil 特级初榨橄榄油 163-190ºC 325-375ºF Butter 黄油 150ºC 302ºF</description></item><item><title>WebPageData2</title><link>https://cuisiting.github.io/posts/cuisiting/webpagedata2/</link><pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/webpagedata2/</guid><description>对比 LocalStorage、SessionStorage、IndexedDB和Cookies四种客户端存储技术的关键特性：
特性 LocalStorage SessionStorage IndexedDB Cookies 数据生命周期 持久存储，除非用户或脚本手动删除 页面会话期间，窗口或标签页关闭则数据消失 持久存储，除非用户或脚本手动删除 设置的有效期内，或直至手动删除 存储容量 约5MB 约5MB 无明确限制，但可能受硬盘容量影响 每个cookie最大约4KB，每个域名限制数量不同 访问性 同源策略限制 同源策略限制，仅限当前页面会话 同源策略限制 所有请求都会携带，可跨域（如果设置了Domain属性） 数据格式 字符串 字符串 支持多种数据格式，包括二进制数据 字符串 与服务器通信 不自动发送，需要通过AJAX/Fetch等手动发送 不自动发送，需要通过AJAX/Fetch等手动发送 不自动发送，需要通过AJAX/Fetch等手动发送 自动随每个HTTP请求发送到服务器 使用场景 长期保存大量数据（如用户偏好设置） 单页面会话数据（如表单输入） 大型数据集合，如离线应用数据 身份验证，跟踪用户会话 安全性 相对较高，但需防止XSS攻击 相对较高，但需防止XSS攻击 相对较高，但需防止XSS攻击 较低，特别是未设置HttpOnly标志时容易受到CSRF攻击 **LocalStorage ** or SessionStorage
// 设置localStorage localStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;localStorage value顶顶顶顶的点点滴滴&amp;#39;); // 设置sessionStorage sessionStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;设置sessionStorage value顶顶顶顶的点点滴滴&amp;#39;); // 获取sessionStorage var sessionData = sessionStorage.getItem(&amp;#39;key&amp;#39;); // 获取localStorage var localStorageData = localStorage.getItem(&amp;#39;key&amp;#39;); console.log(&amp;#34;localStorageData:&amp;#34;+localStorageData); console.</description></item><item><title>死记硬背 rote 记死背硬</title><link>https://cuisiting.github.io/posts/cuisiting/%E6%AD%BB%E8%AE%B0%E7%A1%AC%E8%83%8C-rote-%E8%AE%B0%E6%AD%BB%E8%83%8C%E7%A1%AC/</link><pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E6%AD%BB%E8%AE%B0%E7%A1%AC%E8%83%8C-rote-%E8%AE%B0%E6%AD%BB%E8%83%8C%E7%A1%AC/</guid><description>死记硬背 rote 记死背硬
memorize first, make sense later
![[hard_record_dead_remember_2.png]]
![[hard_record_dead_remember_1.png]]</description></item><item><title>Hugo 按文章中的时间排序</title><link>https://cuisiting.github.io/posts/cuisiting/hugo-%E6%8C%89%E6%96%87%E7%AB%A0%E4%B8%AD%E7%9A%84%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/</link><pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/hugo-%E6%8C%89%E6%96%87%E7%AB%A0%E4%B8%AD%E7%9A%84%E6%97%B6%E9%97%B4%E6%8E%92%E5%BA%8F/</guid><description> +{{ $sortedPages := sort $pages &amp;#34;Params.date&amp;#34; &amp;#34;desc&amp;#34; }} + + &amp;lt;div class=&amp;#34;flex flex-col w-full max-w-4xl lg:max-w-5xl relative&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;flex flex-row&amp;#34;&amp;gt; &amp;lt;section class=&amp;#34;flex flex-col w-full md:w-4/5&amp;#34;&amp;gt; - {{ range (.Paginate $pages).Pages }} + {{ range (.Paginate $sortedPages).Pages }} &amp;lt;article class=&amp;#34;flex flex-col gap-y-3 p-6 mt-6 mx-2 md:mx-0 rounded-lg shadow-md bg-white dark:bg-gray-700&amp;#34;&amp;gt; &amp;lt;div data-hveid=&amp;#34;CBEQAA&amp;#34;&amp;gt; &amp;lt;div&amp;gt;</description></item><item><title>LLM, What's the Token?</title><link>https://cuisiting.github.io/posts/cuisiting/llm-whatisthetoken/</link><pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/llm-whatisthetoken/</guid><description>Token vs Word Summary: Summary OpenAi
What are tokens and how to count them? | OpenAI Help Center - 1 token ~= 4 chars in English - 1 token ~= ¾ words - 100 tokens ~= 75 words Or - 1-2 sentence ~= 30 tokens - 1 paragraph ~= 100 tokens - 1,500 words ~= 2048 tokens Why need Token? 在大型语言模型（如GPT系列）中，
&amp;ldquo;Token&amp;quot;通常指的是文本处理的基本单位。
在传统的文本处理中，我们可能会将文本分割成词（words）或者句子作为基本的处理单位。然而，在现代的大型语言模型中，&amp;ldquo;Token&amp;quot;可以是更小的单位，如字（characters）、词根、甚至是词的一部分，这取决于所使用的分词方法（tokenization method）。
分词方法将原始文本分解为一系列的token，这些token随后被模型用于训练和生成文本。这一过程允许模型理解和生成包括多种语言在内的复杂文本，因为它可以捕捉到词汇的细微差别、语法结构和语境意义。</description></item><item><title>计算增长率</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%AE%A1%E7%AE%97%E5%A2%9E%E9%95%BF%E7%8E%87/</link><pubDate>Sun, 10 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%AE%A1%E7%AE%97%E5%A2%9E%E9%95%BF%E7%8E%87/</guid><description>JavaScript function calculateRatio(start, end, year) { // 计算ratio const ratio = Math.pow(end / start, 1 / year) - 1; return ratio; } // 示例输入 const start = 100; // 开始值 const end = 200; // 结束值 const year = 3; // 年份 // 调用函数并输出结果 console.log(calculateRatio(start, end, year)); Execl =((end/start)^(1/(endYear-startYear)))-1</description></item><item><title>IntellJ Idea</title><link>https://cuisiting.github.io/posts/cuisiting/intellj-idea/</link><pubDate>Wed, 06 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/intellj-idea/</guid><description/></item><item><title>use React.js , deploy on Vercel , control AWS EC2</title><link>https://cuisiting.github.io/posts/cuisiting/use-react.js--deploy-on-vercel--control-aws-ec2/</link><pubDate>Tue, 05 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/use-react.js--deploy-on-vercel--control-aws-ec2/</guid><description/></item><item><title>draw.io copy format text</title><link>https://cuisiting.github.io/posts/cuisiting/draw.io-copy-format-text/</link><pubDate>Mon, 04 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/draw.io-copy-format-text/</guid><description>To maintain the formatting of JSON code snippets when copying from Visual Studio Code (VS Code) to draw.io, you can follow these steps.
The goal is to ensure that the indentation (spaces or tabs) is preserved when the text is pasted into a text box in draw.io.</description></item><item><title>LangChain</title><link>https://cuisiting.github.io/posts/cuisiting/langchain/</link><pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/langchain/</guid><description>LangChain 还包括一些组件，可让 LLM 无需重新训练即可访问新的数据集。 LLM 擅长在常规上下文下对提示做出响应，但在未接受过训练的特定领域却很吃力。_提示_是人们寻求 LLM 回复时所用的查询。例如，LLM 可以通过提供估算值来回答计算机成本问题。但是，它无法列出贵公司销售的特定计算机型号的价格。 LangChain LangChain is a framework for developing applications powered by language models. It enables applications that:
Are context-aware: connect a language model to sources of context (prompt instructions, few shot examples, content to ground its response in, etc.) Reason: rely on a language model to reason (about how to answer based on provided context, what actions to take, etc.)
Build context-aware reasoning applications AWS explain https://aws.</description></item><item><title>龙蛇之变，木雁之间</title><link>https://cuisiting.github.io/posts/cuisiting/%E9%BE%99%E8%9B%87%E4%B9%8B%E5%8F%98%E6%9C%A8%E9%9B%81%E4%B9%8B%E9%97%B4/</link><pubDate>Fri, 23 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E9%BE%99%E8%9B%87%E4%B9%8B%E5%8F%98%E6%9C%A8%E9%9B%81%E4%B9%8B%E9%97%B4/</guid><description>庄子行于山中，见大木，枝叶盛茂，伐木者止其旁而不取也。
问其故。曰：“无所可用。”
庄子曰：“此木以不材得终其天年。”
夫子出于山，舍于故人之家。故人喜，命竖子杀雁而烹之。
竖子请曰：“其一能鸣，其一不能鸣，请奚杀？”
主人曰：“杀不能鸣者。”
明日，弟子问于庄子曰：“
昨日山中之木，以不材得终其天年；
今主人之雁，以不材死。先生将何处？”
庄子笑曰：“周将处夫材与不材之间。材与不材之间，似之而非也，故未免乎累。
若夫乘道德而浮游则不然。
无誉无訾，
一龙一蛇，与时俱化，而无肯专为；
一上一下，以和为量，浮游乎万物之祖；
物物而不物于物，则胡可得而累邪！此黄帝、神农之法则也。
若夫万物之情，人伦之传，则不然。
合则离，成则毁，廉则挫，尊则议，有为则亏，贤则谋，不肖则欺，
胡可得而必乎哉？悲夫！弟子志之，其唯道德之乡乎！”</description></item><item><title>jetlag</title><link>https://cuisiting.github.io/posts/cuisiting/jetlag/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/jetlag/</guid><description>Jet lag
Jet Lag | Travelers&amp;rsquo; Health | CDC Jet lag is caused by a mismatch between a person’s normal daily rhythms and a new time zone. It is a temporary sleep problem that usually occurs when you travel across more than three time zones but can affect anyone who travels across multiple time zones. Jet lag can affect your mood, your ability to concentrate, and your physical and mental performance.</description></item><item><title>模板</title><link>https://cuisiting.github.io/posts/cuisiting/http-get-vs-post/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/http-get-vs-post/</guid><description> 特性 GET 请求 POST 请求 举例说明 数据传输方式 通过 URL 传输数据。数据附加在 URL 后作为查询字符串。 数据放在 HTTP 请求的 body 中。 GET: 访问一个网页时，搜索参数可能会附加在 URL 中。 POST: 提交表单时，表单数据会包含在请求体中。 安全性 较低，数据在 URL 中明文传输，容易被拦截。 较高，数据不会直接暴露在 URL 中，但仍需加密措施保护。 GET: 密码或敏感信息不应通过 URL 传递。 POST: 在线支付信息通常通过 POST 提交以保护数据。 可缓存性 可以被浏览器或代理服务器缓存。 通常不被缓存。 GET: 静态资源请求，如图片或 CSS 文件，可以被缓存以加快加载速度。 POST: 用户提交的表单数据不应被缓存。 历史记录 请求的 URL 会保存在浏览器历史记录里，数据可见。 请求不会保存在浏览器历史记录里，数据不直接可见。 GET: 搜索引擎查询的 URL 可以从浏览器历史中直接访问。 POST: 用户登录信息提交后，不会出现在历史记录中。 用途 适用于请求数据。 适用于更新数据。 GET: 获取某个页面或者文章信息。 POST: 在线注册账户时提交用户信息。 数据大小限制 由于 URL 长度限制，传输的数据量相对较小。 理论上没有大小限制，可以传输大量数据。 GET: URL 通常受浏览器或服务器限制在几千字符内。 POST: 上传大文件，如视频或大型文档。 幂等性 是幂等的，多次请求不会改变资源状态。 通常不是幂等的，多次请求可能会改变资源状态。 GET: 多次刷新新闻页面，内容不变。 POST: 多次提交订单，可能会创建多个订单。</description></item><item><title>经济数据</title><link>https://cuisiting.github.io/posts/cuisiting/%E7%BB%8F%E6%B5%8E%E6%95%B0%E6%8D%AE/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E7%BB%8F%E6%B5%8E%E6%95%B0%E6%8D%AE/</guid><description>![[economy_data_1.png]]
https://sc.macromicro.me/ https://www.tradingview.com/chart/iuFHyfXI/</description></item><item><title>美联储利率</title><link>https://cuisiting.github.io/posts/cuisiting/%E7%BE%8E%E8%81%94%E5%82%A8%E5%88%A9%E7%8E%87/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E7%BE%8E%E8%81%94%E5%82%A8%E5%88%A9%E7%8E%87/</guid><description> 联邦资金利率（Federal Funds Rate）为一家存托机构（多数是银行）利用手上的资金向另一家存托机构无担保借出隔夜贷款的利率。
联邦基金利率是金融市场的重要基准之一。代表的是短期市场利率水准。
联邦基金利率 - 维基百科，自由的百科全书 (wikipedia.org) 美联储议息会议时间表_会议纪要_美联储 主席_美联储(FED)-汇通网 (fx678.com) Federal Funds Effective Rate (FEDFUNDS) | FRED | St. Louis Fed (stlouisfed.org)</description></item><item><title>数据格式</title><link>https://cuisiting.github.io/posts/cuisiting/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/</link><pubDate>Tue, 30 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E6%95%B0%E6%8D%AE%E6%A0%BC%E5%BC%8F/</guid><description>二进制数据格式：
数据格式 特点 适用场景 使用服务/应用程序 Avro 二进制格式，高性能，模式定义 大数据处理，分布式系统 Apache Hadoop，Kafka Protocol Buffers 二进制格式，高性能，代码生成 分布式系统，网络通信，高性能数据交换 gRPC，Google APIs MessagePack 二进制格式，紧凑，多语言支持 数据存储，通信，高性能应用程序 Redis，MessagePack-RPC BSON 二进制JSON扩展，高性能，数据类型支持 NoSQL数据库，MongoDB数据交换 MongoDB 文本数据格式：
数据格式 特点 适用场景 使用服务/应用程序 JSON 文本格式，易于阅读，易于编写 Web应用程序，API，配置文件 RESTful API，JavaScript XML 标记语言，支持嵌套，复杂结构 数据交换，配置文件，复杂文档 SOAP，RSS，配置文件 YAML 人类可读，简洁语法，易于编写 配置文件，人类可读数据交换 Docker Compose，Ansible 其他数据格式：
数据格式 特点 适用场景 使用服务/应用程序 TOML 人类可读，简单，易于编写 配置文件，人类可读数据交换 Rust，Cargo配置文件 CSV 文本格式，表格数据，易于导入导出 数据导入导出，电子表格 Microsoft Excel，Pandas HTML 网页标记语言，网页内容描述 网页制作，数据抓取，内容展示 Web浏览器，网页编辑器 EDN 可扩展数据表示，Clojure相关 Clojure编程，数据交换 Clojure，Datomic</description></item><item><title>共轭Conjugate</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%85%B1%E8%BD%AD/</link><pubDate>Sat, 27 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%85%B1%E8%BD%AD/</guid><description>在语言学中，&amp;ldquo;共轭&amp;rdquo;（Conjugation）是指动词形态的变化，这种变化通常与以下语法范畴相关：
人称：动词的形式根据说话者、听话者和谈论的对象（第一人称、第二人称、第三人称）而变化。
数：动词形式的变化以反映单数或复数。
时态：表示动作发生的时间（如过去、现在、未来）。
体：体现动作的完成度或状态（如完成体、进行体）。
语气：表达说话者对动作的态度，如陈述、疑问、祈使、虚拟等。
方面：表示动作的持续性、重复性或一次性等特征。
不同语言的动词共轭系统可能非常复杂，涉及多种语法要素的组合。例如，在罗曼语族中，动词的共轭非常丰富和复杂，而在一些其他语言中，如中文，动词共轭可能相对简单或几乎不存在。
共轭（Conjugate）在数学中有多种含义，具体取决于所讨论的数学对象。以下是一些常见的共轭的概念：
复数的共轭：一个复数的共轭是其实部不变，虚部符号相反的复数。例如，复数 a + bi 的共轭是 a - bi。
矩阵的共轭转置：一个矩阵的共轭转置（也称为伴随矩阵）是将矩阵的每个元素取共轭，然后对矩阵进行转置（即行列互换）。如果矩阵 A 的元素为 A_{ij}，那么它的共轭转置矩阵的元素为 \overline{A_{ji}}，其中 \overline{A_{ji}} 表示 A_{ji} 的共轭复数。
二项式的共轭：在代数中，如果有一个二项式 a + b，那么它的共轭是 a - b。这在二次方程的解中尤为常见。
群论中的共轭：在群论中，如果有群 G 中的元素 g 和 h，则 g 和 h 是共轭的，如果存在 G 中的某个元素 x 使得 xgx^{-1} = h。
四元数的共轭：四元数的共轭类似于复数的共轭，是将四元数的虚部的符号取反。
这些是共轭的一些常见含义，但在不同的数学领域中，共轭可能有其他特定的定义。</description></item><item><title>Check My CreditScore</title><link>https://cuisiting.github.io/posts/cuisiting/check-my-creditscore/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/check-my-creditscore/</guid><description>Learn about your credit report and how to get a copy https://www.usa.gov/credit-reports By law, you can get a free credit report each year from the three credit reporting agencies (CRAs). These agencies include Equifax, Experian, and TransUnion.
根据法律规定，您每年可以从三个信用报告机构 (CRA) 获得免费的信用报告。这些机构包括 Equifax、Experian 和 TransUnion。
Equifax、Experian VS TransUnion https://www.chase.com/personal/credit-cards/education/credit-score/credit-bureau-differences 项目（Project） Experian Equifax TransUnion 简介 (Introduction) 美国最大的信用局，为超过2.2亿消费者维护信用信息。独特之处在于收集房东报告的租金支付数据。 (The largest credit bureau in the U.S., maintaining credit information for over 220 million consumers. Unique for collecting rental payment data from landlords.</description></item><item><title>基于Neo4j构建源码可视化</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>插入数据 查询所有节点 MATCH (n) RETURN n 查询两个节点之间的直接&amp;amp;间接关系和节点 MATCH path = (a)-[*]-(b) WHERE a.name = &amp;#39;your_nodo_name_1&amp;#39; AND b.name = &amp;#39;your_nodo_name_2&amp;#39; RETURN path</description></item><item><title>401K</title><link>https://cuisiting.github.io/posts/cuisiting/401k/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/401k/</guid><description>项目 Pre-tax 401k After-tax 401k Roth 401k Roth IRA 投资类型 税前投资 税后投资 税后投资 税后投资 本金 投资时税务处理 减少应纳税收入，延迟缴税 不减少应纳税收入，不延迟缴税 不减少应纳税收入，不延迟缴税 不减少应纳税收入，不延迟缴税 提取时税务处理 在提取时纳税 不纳税 不纳税 不纳税 提前提取惩罚 税款加10%罚金 税款加10%罚金 税款加10%罚金 无罚金 收益 投资时税务处理 无 无 无 无 退休时提取时税务处理 在提取时纳税 收益在提取时纳税 **收益在提取时不纳税 **收益在提取时不纳税 **提前提取惩罚 税款加10%罚金 税款加10%罚金 税款加10%罚金 收益部分可能有税款加罚金 投资上限 $19,500（不包含公司match） $57,000（总额，包括个人和公司match） $19,500（不包含公司match） $6,000 投资选择灵活性 由雇主决定 由雇主决定 由雇主决定 高，可选择多种投资产品 适用人群 想要即时税务优惠的投资者 适合高收入投资者，利用税后收入投资 想要退休时免税的投资者 想要灵活性高且退休时免税的投资者 你自己对 401k 的 contribution 有个
Limit: Pre-tax + Roth 401k &amp;lt;= $22500 (2023 tax year)</description></item><item><title>A模板</title><link>https://cuisiting.github.io/posts/cuisiting/a%E6%A8%A1%E6%9D%BF/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/a%E6%A8%A1%E6%9D%BF/</guid><description>https://api.pro365.top Summary dd</description></item><item><title>A模板</title><link>https://cuisiting.github.io/posts/cuisiting/google-drive-api/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/google-drive-api/</guid><description>api 访问权限 Create Project https://console.cloud.google.com/apis/dashboard?project=mergewebmmp3 启用 API ![[google_drive_api_2.png]]</description></item><item><title>A模板</title><link>https://cuisiting.github.io/posts/cuisiting/%E9%9F%B3%E6%A0%87/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E9%9F%B3%E6%A0%87/</guid><description> 辅音 清/浊 调音部位 调音方式 p 清音 双唇 塞音(爆破音/爆发音) b 浊音 双唇 塞音(爆破音/爆发音) t 清音 上齿龈 塞音(爆破音/爆发音) d 浊音 上齿龈 塞音(爆破音/爆发音) k 清音 软腭 塞音(爆破音/爆发音) g 浊音 软腭 塞音(爆破音/爆发音) m 浊音 双唇 鼻音 n 浊音 上齿龈 鼻音 ŋ 浊音 软腭 鼻音 f 清音 上齿+下唇 擦音(摩擦音) v 浊音 上齿+下唇 擦音(摩擦音) s 清音 上齿龈 擦音(摩擦音) z 浊音 上齿龈 擦音(摩擦音) θ 清音 牙齿 擦音(摩擦音) ð 浊音 牙齿 擦音(摩擦音) ∫ 清音 齿龈后 擦音(摩擦音) ʒ 浊音 齿龈后 擦音(摩擦音) t∫ 清音 齿龈后 塞擦音(阻塞+摩擦) dʒ 浊音 齿龈后 塞擦音(阻塞+摩擦) h 清音 声门 擦音(摩擦音) w 浊音 唇+软腭 近音 r 浊音 上齿龈 近音 j 浊音 硬腭 近音 l 浊音 上齿龈 边近音</description></item><item><title>CallTree</title><link>https://cuisiting.github.io/posts/cuisiting/calltree/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/calltree/</guid><description/></item><item><title>ECharts</title><link>https://cuisiting.github.io/posts/cuisiting/echarts/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/echarts/</guid><description>ECharts · Example (datamatic-public.github.io)</description></item><item><title>English Practice - Word</title><link>https://cuisiting.github.io/posts/cuisiting/english-practice---word/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/english-practice---word/</guid><description> 一个单词可以拆分为 : 前缀-词根-后缀
a word can be broken into prefix-root-suffix word frequency entries.pdf (wordfrequency.info) 医学 https://globalrph.com/medical-terms-introduction/ 词典 learning - WordReference.com 英汉词典</description></item><item><title>Github</title><link>https://cuisiting.github.io/posts/cuisiting/github/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/github/</guid><description>Github most popular fork https://gitpop2.vercel.app/ Github Star History and Compare https://star-history.com/#bumptech/glide&amp;facebook/fresco&amp;nostra13/Android-Universal-Image-Loader&amp;square/picasso&amp;coil-kt/coil&amp;Date Example: Android Image loader library</description></item><item><title>go parse english html</title><link>https://cuisiting.github.io/posts/cuisiting/go-parse-english-html/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/go-parse-english-html/</guid><description>go 解析 html的的速度 比 python(BeautySoup 快)
未尝试 python(lxml)
run name.go `go run hello.go</description></item><item><title>Google or GPT 宕机会带来多少损失？</title><link>https://cuisiting.github.io/posts/cuisiting/google-or-gpt-%E5%AE%95%E6%9C%BA%E4%BC%9A%E5%B8%A6%E6%9D%A5%E5%A4%9A%E5%B0%91%E6%8D%9F%E5%A4%B1/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/google-or-gpt-%E5%AE%95%E6%9C%BA%E4%BC%9A%E5%B8%A6%E6%9D%A5%E5%A4%9A%E5%B0%91%E6%8D%9F%E5%A4%B1/</guid><description/></item><item><title>Hugo Theme Colletion</title><link>https://cuisiting.github.io/posts/cuisiting/hugotheme/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/hugotheme/</guid><description> https://themes.gohugo.io/tags/blog/ https://themes.gohugo.io/themes/hugo-theme-tailwind/ https://perplex.desider.at/blog/ https://neonmirrors.net/ https://hbs.razonyang.com/v1/en/categories/ https://themes.gohugo.io/themes/hugo-dead-simple/</description></item><item><title>iTerm2</title><link>https://cuisiting.github.io/posts/cuisiting/iterm2/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/iterm2/</guid><description>close bell Preferences -&amp;gt; Profiles -&amp;gt; Terminal -&amp;gt; silence bell</description></item><item><title>MongoDB</title><link>https://cuisiting.github.io/posts/cuisiting/mongodb-usage/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/mongodb-usage/</guid><description>Install Install MongoDB Community Edition — MongoDB Manual Start Stop brew services stop mongodb-community CURD Insert Documents — MongoDB Manual UI client MongoDB Compass Download (GUI) | MongoDB</description></item><item><title>Neo4j</title><link>https://cuisiting.github.io/posts/cuisiting/neo4j/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/neo4j/</guid><description>neo4j 查看所有节点 MATCH (n) RETURN n neo4j 查看所有节点和关系 MATCH (n)-[r]-&amp;gt;(m) RETURN n, r, m</description></item><item><title>Obsidian dataview</title><link>https://cuisiting.github.io/posts/cuisiting/obsidian-plugin---dataview/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/obsidian-plugin---dataview/</guid><description> LIST FROM #English SORT file.name ASC</description></item><item><title>OKX、欧科云链、欧易</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E4%BA%A4%E6%98%93%E6%89%80/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81%E4%BA%A4%E6%98%93%E6%89%80/</guid><description>加密货币交易所 中心化 CEX 去中心化 DEX 盈利模式 加密货币交易所的盈利模式主要可以分为以下几种：
交易费：这是加密货币交易所最直接的收入来源。每当用户在平台上买卖加密货币时，交易所会收取一定比例的费用作为交易费。这个费用通常是交易金额的一小部分，比如0.1%到0.5%不等。对于一些大型交易所来说，即便这个比例很小，但由于交易量巨大，累积起来的收入也非常可观。
提现费和充值费：除了交易费之外，一些交易所还会在用户提现或充值时收取一定的费用。这些费用的具体数额可以根据不同的货币和提现方式有所不同。
市场做市：一些交易所通过自己或合作伙伴在市场上买卖加密货币，以保证市场的流动性。这种做法可以让交易所从市场价差中获利。
新币上市费：对于想要在交易所上市的加密货币项目方来说，交易所通常会收取一定的上市费。这个费用可以根据交易所的影响力和加密货币项目的热度有很大的差异。
利息收入：一些交易所提供加密货币存款服务，用户可以将自己的加密货币存放在交易所，以获得一定的利息。交易所则可以利用这些资金进行各种投资或贷款活动，从中获得收益。
衍生品和杠杆交易：提供期货、期权和杠杆交易服务的交易所可以通过收取更高的交易费、资金费率或是利息来获得额外的收入。
广告和推广服务：交易所还可以通过在其平台上提供广告位给加密货币项目方或其他合作伙伴，从而获得广告收入。
其他服务：包括但不限于加密货币托管服务、API服务、教育资源、数据分析服务等，这些都可以为交易所带来额外的收入来源。
加密货币交易所的盈利模式多样，随着市场的发展和监管的变化，这些模式也在不断地演进和创新。
OKX 欧科云链 欧易 名称 类别 描述 欧易/OKEx 交易所 原名欧易，现在更名为OKX，是一个提供虚拟货币交易服务的平台，包括现货和衍生品交易。 OKX 品牌/交易所 欧易的新名称，依旧是欧科云链旗下的虚拟货币交易所，提供广泛的交易服务。 欧科云链 科技集团 OK Group的中文名称，是一个涵盖多个业务领域的集团，包括区块链技术研发、虚拟货币交易所运营等。欧易/OKX就是其旗下的一个交易所品牌。</description></item><item><title>python Html parse</title><link>https://cuisiting.github.io/posts/cuisiting/html-parse-lxml.html/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/html-parse-lxml.html/</guid><description>若从浏览器获得的xpath 为
//*[@id=&amp;#34;contenttable&amp;#34;]/tbody/tr/td/table/tbody/tr/td[2]/h3 则 lxml_tree.xpath 的 参数应为：
浏览器 : //*[@id=&amp;#34;contenttable&amp;#34;]/tbody/tr/td/table/tbody/tr/td[2]/h3 lxml_tree.xpath : //*[@id=&amp;#34;contenttable&amp;#34;]///tr/td/table///tr/td[2]/h3 from lxml import html xpath_content = lxml_tree.xpath(&amp;#39;//*[@id=&amp;#34;contenttable&amp;#34;]//tr/td/table//tr/td[2]/h3&amp;#39;)</description></item><item><title>python unit test 单元测试</title><link>https://cuisiting.github.io/posts/cuisiting/python-unit-test-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/python-unit-test-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</guid><description>直接定义 函数 test_fun_name
def test_example(): print(&amp;#34;info&amp;#34;) 命令行调用 test function
pytest PythonFile.py::test_fun</description></item><item><title>Vis.js</title><link>https://cuisiting.github.io/posts/cuisiting/vis.js/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/vis.js/</guid><description/></item><item><title>Youtube DL</title><link>https://cuisiting.github.io/posts/cuisiting/python-merge-concat-webm-and-mp3/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/python-merge-concat-webm-and-mp3/</guid><description>Download for webm(without audio)
SSYouTube: Online Video Downloader - SSYouTube.com for audio
Yt5s Video Youtube Downloader For Free Install 安装ffmpeg brew install ffmpeg 安装 ffmpeg 的python api
注意是 pip install ffmpeg-python
instead of pip install ffmpeg pip install ffmpeg-python 如果已经安装了 module 为 ffmpeg 的api，则先uninstall
注意此处区分 brew install 和 pip install 的区别
pip uninstall ffmpeg pip uninstall ffmpeg-python pip install ffmpeg-python AttributeError: module &amp;lsquo;ffmpeg&amp;rsquo; has no attribute &amp;lsquo;input&amp;rsquo; · Issue #174 · kkroening/ffmpeg-python (github.</description></item><item><title>云主机</title><link>https://cuisiting.github.io/posts/cuisiting/%E4%BA%91%E4%B8%BB%E6%9C%BA/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E4%BA%91%E4%B8%BB%E6%9C%BA/</guid><description/></item><item><title>向量数据库 vs 图数据库</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description> 维度 图数据库 向量数据库 解决方案 解决复杂关系和网络的分析问题 解决高维数据的相似性搜索和检索问题 流行框架 Neo4j, ArangoDB, OrientDB, Amazon Neptune Milvus, Faiss, Annoy, Pinecone 杀手级应用 社交网络分析, 路径查找, 网络拓扑, 推荐系统 推荐系统, 图像识别, 语音识别, 自然语言处理 优点 强大的关系处理能力，优化的关系遍历性能 高效的相似性搜索，适合处理大规模多维数据 缺点 相对较高的复杂性和学习曲线 数据维度的增加可能导致性能下降（维度诅咒） 底层框架 基于Apache Lucene进行索引和存储的优化 通常使用特定的数据结构如KD树、球树等进行数据索引和搜索 原理 利用图论概念，数据以节点和边的形式存在，边表示节点间的关系 利用距离或相似度度量（如欧氏距离、余弦相似度）来索引和查询向量 用途 关系重的数据应用，如网络分析，关系数据库 面向特征向量的搜索和分析应用，如图像和文本数据库 性能 高效的关系遍历和图算法性能 高效的相似性搜索性能，尤其是在低至中等维度的数据集上 数据模型 节点和边构成的网络结构 高维空间中的点集，每个点代表数据集中的一个项目 数据存储方式 节点和边直接存储在图结构中 向量通常存储在特定的数据结构中以优化搜索性能 查询语言 使用专门的图查询语言如Cypher 使用基于距离的查询参数，有时借助 SQL-like 查询语言 扩展性 良好的水平扩展性，尤其是在处理复杂查询和大数据集时 依赖于数据结构和实现，高维数据集扩展可能具有挑战性 事务支持 通常提供良好的事务支持，保证数据的一致性和完整性 事务支持因实现而异，一些系统可能主要优化读性能而非写性能</description></item><item><title>基于 Neo4j 构建 Java 工程代码CallTree Graph</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</guid><description/></item><item><title>大数据</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%A4%A7%E6%95%B0%E6%8D%AE/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%A4%A7%E6%95%B0%E6%8D%AE/</guid><description/></item><item><title>学习语言学帮助学语言 Studying Linguistics helps to learn languages</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%AD%A6%E4%B9%A0%E8%AF%AD%E8%A8%80%E5%AD%A6%E5%B8%AE%E5%8A%A9%E5%AD%A6%E8%AF%AD%E8%A8%80-studying-linguistics-helps-to-learn-languages/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%AD%A6%E4%B9%A0%E8%AF%AD%E8%A8%80%E5%AD%A6%E5%B8%AE%E5%8A%A9%E5%AD%A6%E8%AF%AD%E8%A8%80-studying-linguistics-helps-to-learn-languages/</guid><description> 学习语言学帮助学语言
Studying Linguistics helps to Learn Languages
研究分支 Branch 研究内容 重大成果 教学应用 具体例子 如何帮助学习语言 语音学 Phonetics 研究语音的物理属性 国际音标系统（IPA） 提供准确的发音指导 [t]和[θ]的发音区别（如英语中的&amp;rsquo;thin&amp;rsquo;和&amp;rsquo;tin&amp;rsquo;） 帮助学生学习正确发音 音系学 Phonology 研究音位规则和音位系统 最小配对分析方法 发音训练，强调音位区别 [p]和[b]在英语&amp;quot;pat&amp;quot;和&amp;quot;bat&amp;quot;中的区别 提高语音辨识能力，避免意义混淆 形态学 Morphology 研究词汇的形成和词的结构 词库理论 教授单词的变形和构词法 英语动词的过去式形成（如&amp;rsquo;walk&amp;rsquo;变为&amp;rsquo;walked&amp;rsquo;） 加深对词汇构造和使用的理解 句法学 Syntax 研究句子的结构和组织 X-bar理论 教授句子成分分析和结构构建 英语中主语和谓语的一致（如&amp;quot;She runs&amp;quot;） 帮助学生理解和运用复杂句式 语义学 Semantics 研究语言的意义和句子如何传达意义 真值条件分析 教授句子的意义和语境解释 区分&amp;quot;literal&amp;quot;和&amp;quot;figurative&amp;quot;语言（如&amp;quot;I am starving&amp;quot;并非真的饿死） 提高语言的理解和表达能力 语用学 Pragmatics 研究语言在实际使用中的功能和规律 语境理论和含义推断 教授语用功能，如言外之意和委婉表达 使用&amp;quot;Could you&amp;hellip;&amp;ldquo;代替&amp;quot;Give me&amp;hellip;&amp;ldquo;表达礼貌请求 增强交际能力，提高语言应用的适当性</description></item><item><title>将draw.io 放在 markdown中</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%B0%86draw.io-%E6%94%BE%E5%9C%A8-markdown%E4%B8%AD/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%B0%86draw.io-%E6%94%BE%E5%9C%A8-markdown%E4%B8%AD/</guid><description>将流程图或draw.io 文件已svg存储，在markdown 中像引用图片一样引用svg
markdown，html 可以渲染svg
draw.io 可以编辑 svg 文件
draw.io 可以将save as svg</description></item><item><title>小红书</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%B0%8F%E7%BA%A2%E4%B9%A6%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%B0%8F%E7%BA%A2%E4%B9%A6%E8%BE%85%E5%8A%A9%E6%8F%92%E4%BB%B6/</guid><description/></item><item><title>美国 计算机 硕士</title><link>https://cuisiting.github.io/posts/cuisiting/master_cs/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/master_cs/</guid><description>keyword: 美国 计算机 硕士, USA ,CS , Master
大学 MS - Master of Science EE - Electrical Engineering CE - Computer Engineering CS - Computer Science SE - Software Engineering CIS - Computer Information Systems MIS - Management Information Systems IT - Information Technology 德克萨斯州立大学（Texas State University） graph LR A[Degree Types] --&amp;gt;|Master&amp;#39;s Degree| B[MA/MS] A --&amp;gt;|Doctoral Degree| C[DA] B --&amp;gt; D[MS in EE] B --&amp;gt; E[MS in CE] B --&amp;gt; F[MS in CS] B --&amp;gt; G[MS in SE] B --&amp;gt; H[MS in CIS] B --&amp;gt; I[MS in MIS] B --&amp;gt; J[MS in IT] D[MS in EE] --&amp;gt; EE[Electrical Engineering] E[MS in CE] --&amp;gt; CE[Computer Engineering] F[MS in CS] --&amp;gt; CS[Computer Science] F[MS in CS] --&amp;gt; DS[Data Science] G[MS in SE] --&amp;gt; SE[Software Engineering] H[MS in CIS] --&amp;gt; CIS[Computer Information Systems] I[MS in MIS] --&amp;gt; MIS[Management Information Systems] J[MS in IT] --&amp;gt; IT[Information Technology] graph LR A[Degree Types] -->|Master's Degree| B[MA/MS] A -->|Doctoral Degree| C[DA] B --> D[MS in EE] B --> E[MS in CE] B --> F[MS in CS] B --> G[MS in SE] B --> H[MS in CIS] B --> I[MS in MIS] B --> J[MS in IT] D[MS in EE] --> EE[Electrical Engineering] E[MS in CE] --> CE[Computer Engineering] F[MS in CS] --> CS[Computer Science] F[MS in CS] --> DS[Data Science] G[MS in SE] --> SE[Software Engineering] H[MS in CIS] --> CIS[Computer Information Systems] I[MS in MIS] --> MIS[Management Information Systems] J[MS in IT] --> IT[Information Technology]</description></item><item><title>英语动词</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E5%8A%A8%E8%AF%8D%E5%8F%98%E5%8C%96-----%E5%90%8E%E7%BC%80/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E5%8A%A8%E8%AF%8D%E5%8F%98%E5%8C%96-----%E5%90%8E%E7%BC%80/</guid><description>一般动词 加上哪些后缀会形成新单词》
英语中，动词可以通过添加不同的后缀形成新的单词，特别是名词、形容词和副词。这里是一些常见的后缀及其用途：
名词后缀 -er/or: 指做某事的人或物，例如 &amp;ldquo;worker&amp;rdquo;（工人）、&amp;ldquo;actor&amp;rdquo;（演员）。 -tion/sion: 形成名词，通常表示动作或状态，例如 &amp;ldquo;creation&amp;rdquo;（创造）、&amp;ldquo;decision&amp;rdquo;（决定）。 -ment: 表示动作的结果或用于动作的物品，例如 &amp;ldquo;arrangement&amp;rdquo;（安排）、&amp;ldquo;equipment&amp;rdquo;（设备）。 -ing: 形成名词，指动作或过程，例如 &amp;ldquo;running&amp;rdquo;（跑步）、&amp;ldquo;painting&amp;rdquo;（绘画）。 -ance/ence: 形成表状态或结果的名词，例如 &amp;ldquo;assistance&amp;rdquo;（协助）、&amp;ldquo;dependence&amp;rdquo;（依赖）。 -ity: 表示状态或质量，例如 &amp;ldquo;activity&amp;rdquo;（活动）、&amp;ldquo;validity&amp;rdquo;（有效性）。 形容词后缀 -able/ible: 表示可被&amp;hellip;的，例如 &amp;ldquo;reliable&amp;rdquo;（可靠的）、&amp;ldquo;accessible&amp;rdquo;（可进入的）。 -al: 通常描述与&amp;hellip;相关的，例如 &amp;ldquo;functional&amp;rdquo;（功能的）、&amp;ldquo;musical&amp;rdquo;（音乐的）。 -ful: 充满&amp;hellip;的，例如 &amp;ldquo;joyful&amp;rdquo;（快乐的）、&amp;ldquo;careful&amp;rdquo;（小心的）。 -ous: 具有&amp;hellip;性质的，例如 &amp;ldquo;dangerous&amp;rdquo;（危险的）、&amp;ldquo;famous&amp;rdquo;（著名的）。 -ive: 表示有&amp;hellip;倾向或性质的，例如 &amp;ldquo;creative&amp;rdquo;（有创造力的）、&amp;ldquo;aggressive&amp;rdquo;（侵略性的）。 副词后缀 -ly: 形成副词，表示以&amp;hellip;的方式，例如 &amp;ldquo;quickly&amp;rdquo;（快速地）、&amp;ldquo;sadly&amp;rdquo;（悲伤地）。 这些后缀的添加不仅扩展了词汇的意义和用途，还有助于在不同语境中精确表达思想。
词类 后缀 示例 描述 形容词 -able/ible reliable, accessible 表示可被&amp;hellip;的 形容词 -al functional, musical 描述与&amp;hellip;相关的 形容词 -ful joyful, careful 充满&amp;hellip;的 形容词 -ive creative, aggressive 表示有&amp;hellip;倾向或性质的 形容词 -ous dangerous, famous 具有&amp;hellip;性质的 &amp;mdash;&amp;mdash;- 名词 -ance/ence assistance, dependence 表示状态或结果 名词 -er/or worker, actor 表示做某事的人或物 名词 -ing running, painting 指动作或过程 名词 -ity activity, validity 表示状态或质量 名词 -ment arrangement, equipment 表示动作的结果或用于动作的物品 名词 -tion/sion creation, decision 表示动作或状态 &amp;mdash;&amp;mdash;- 副词 -ly quickly, sadly 表示以&amp;hellip;的方式</description></item><item><title>英语单词</title><link>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E8%8B%B1%E8%AF%AD%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB/</guid><description>编辑距离/ 莱文斯坦距离 词嵌入（word embeddings） 词嵌入（Word Embeddings）是自然语言处理（NLP）中一种将词汇映射到高维空间向量的技术。在这个高维空间中，每个单词或短语由其上下文的唯一向量表示。这些向量捕捉了单词之间的语义和语法关系，使得语义上或语法上相似的单词具有相似的向量表示。
关键特点 维度压缩： 词嵌入将单词从稀疏的、高维的、独热编码（one-hot encoding）形式转换为低维、密集的向量形式。
语义关系： 向量空间中的距离和方向捕捉了单词之间的语义关系。例如，词嵌入可以捕捉到“国王”与“皇后”、“男孩”与“女孩”之间的关系。
上下文感知： 在某些词嵌入模型中，单词的向量表示也取决于其上下文，意味着相同的单词在不同的语境中可能有不同的表示。
常见的词嵌入模型 Word2Vec： 由 Google 团队开发，它包括两种架构：CBOW（Continuous Bag of Words）和Skip-gram。CBOW 预测目标单词基于上下文，而 Skip-gram 则相反，它预测上下文基于目标单词。
GloVe（Global Vectors for Word Representation）： 它结合了矩阵分解和上下文窗口的技术，通过共现矩阵（co-occurrence matrix）捕捉全局统计信息。
FastText： 由 Facebook 开发，类似于 Word2Vec，但它不仅考虑词本身，还将词内部的子字符串作为训练的基本单位，从而更好地处理罕见词和词形变化。
BERT（Bidirectional Encoder Representations from Transformers）： 一个更先进的方法，使用 Transformer 架构来捕捉单词在其上下文中的双向关系，生成深层双向上下文词嵌入。
应用 词嵌入被广泛应用于各种 NLP 任务，如文本分类、情感分析、机器翻译、问答系统等。它们提供了一种有效的方式来处理自然语言并提取有用的信息和模式。
总结 词嵌入是理解和处理自然语言的强大工具，通过将词汇映射为向量，它们为机器提供了理解词汇之间复杂关系的能力。随着 NLP 技术的不断发展，词嵌入模型也在不断进化，提供更丰富的语义表示和更高效的处理能力。</description></item><item><title>非&amp;关系型数据库</title><link>https://cuisiting.github.io/posts/cuisiting/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E9%9D%9E%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>特性 关系型数据库 非关系型数据库 数据结构 表格，严格的数据模式 键值对，文档，列存储，图形等灵活的数据模式 优点 1. 数据一致性和完整性保证 1. 灵活的数据模型 2. 复杂查询的强大支持 2. 水平扩展容易 3. 事务支持全面 3. 处理大量数据的高效性 缺点 1. 水平扩展有限 1. 传统的事务支持较弱 2. 处理大规模数据时可能出现性能瓶颈 2. 数据一致性较弱 3. 数据模式修改困难 3. 查询功能相对有限 使用场景 1. 需要强事务支持的应用（如金融服务） 1. 需要处理大规模数据集的应用（如社交网络） 2. 数据一致性要求高的场景（如在线零售） 2. 快速开发，频繁更改数据模型的项目 3. 复杂查询频繁的应用（如报表生成） 3. 分布式应用，如物联网 What is NoSQL? | Nonrelational Databases, Flexible Schema Data Models | AWS (amazon.com) SQL vs. NoSQL terminology The following table compares terminology used by select NoSQL databases with terminology used by SQL databases.</description></item></channel></rss>