<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Web分析 on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/web%E5%88%86%E6%9E%90/</link><description>Recent content in Web分析 on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Thu, 18 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/web%E5%88%86%E6%9E%90/index.xml" rel="self" type="application/rss+xml"/><item><title>如何分析一个网页使用了Recat.js 还是 Vue.js</title><link>https://cuisiting.github.io/posts/external/md/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BD%BF%E7%94%A8%E4%BA%86recat.js-%E8%BF%98%E6%98%AF-vue.js/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BD%BF%E7%94%A8%E4%BA%86recat.js-%E8%BF%98%E6%98%AF-vue.js/</guid><description>&lt;h2 id="如何分析一个网页使用了reactjs还是vuejs">如何分析一个网页使用了React.js还是Vue.js&lt;/h2>
&lt;h3 id="1-查看页面源码">1. 查看页面源码&lt;/h3>
&lt;p>打开浏览器，右键点击页面并选择“查看页面源码”（View Page Source）或按 &lt;code>Ctrl + U&lt;/code>。在源码中查找以下关键字：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>React.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>查找&lt;code>react&lt;/code>或&lt;code>ReactDOM&lt;/code>关键字。&lt;/li>
&lt;li>检查是否有以 &lt;code>jsx&lt;/code> 为扩展名的文件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vue.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>查找&lt;code>vue&lt;/code>关键字。&lt;/li>
&lt;li>检查是否有以 &lt;code>vue&lt;/code> 为扩展名的文件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-使用浏览器开发者工具">2. 使用浏览器开发者工具&lt;/h3>
&lt;p>按 &lt;code>F12&lt;/code> 或右键点击页面并选择“检查”（Inspect），打开开发者工具。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>React.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>在“元素”标签（Elements tab）中，查找是否有包含&lt;code>data-reactroot&lt;/code>属性的HTML元素。&lt;/li>
&lt;li>在“控制台”标签（Console tab）中输入 &lt;code>React&lt;/code> 或 &lt;code>ReactDOM&lt;/code>，看是否返回一个对象而不是 &lt;code>undefined&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vue.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>在“元素”标签中，查找是否有包含&lt;code>data-v-&lt;/code>属性的HTML元素。&lt;/li>
&lt;li>在“控制台”标签中输入 &lt;code>Vue&lt;/code>，看是否返回一个对象而不是 &lt;code>undefined&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-使用浏览器扩展">3. 使用浏览器扩展&lt;/h3>
&lt;p>一些浏览器扩展可以帮助你识别网页是否使用了特定的框架：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>React Developer Tools&lt;/strong>: 可以在页面上显示React组件结构。&lt;/li>
&lt;li>&lt;strong>Vue.js devtools&lt;/strong>: 可以在页面上显示Vue组件结构。&lt;/li>
&lt;/ul>
&lt;h3 id="4-使用在线工具">4. 使用在线工具&lt;/h3>
&lt;p>一些在线工具可以分析网页并告诉你其使用的技术栈，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.wappalyzer.com/" target="_blank" rel="noopener">Wappalyzer&lt;/a>
: 可以识别网页使用的各种技术，包括React.js和Vue.js。&lt;/li>
&lt;li>&lt;a href="https://builtwith.com/" target="_blank" rel="noopener">BuiltWith&lt;/a>
: 提供关于网页技术栈的详细信息。&lt;/li>
&lt;/ul>
&lt;p>通过上述方法，你可以很容易地判断一个网页是使用了React.js还是Vue.js。&lt;/p>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/logo_demo_1.png"
 alt="" 
 loading="lazy"
 width=""
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>如何分析一个网页使用了Recat.js 还是 Vue.js</title><link>https://cuisiting.github.io/posts/external/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BD%BF%E7%94%A8%E4%BA%86recat.js-%E8%BF%98%E6%98%AF-vue.js/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/%E5%A6%82%E4%BD%95%E5%88%86%E6%9E%90%E4%B8%80%E4%B8%AA%E7%BD%91%E9%A1%B5%E4%BD%BF%E7%94%A8%E4%BA%86recat.js-%E8%BF%98%E6%98%AF-vue.js/</guid><description>&lt;h2 id="如何分析一个网页使用了reactjs还是vuejs">如何分析一个网页使用了React.js还是Vue.js&lt;/h2>
&lt;h3 id="1-查看页面源码">1. 查看页面源码&lt;/h3>
&lt;p>打开浏览器，右键点击页面并选择“查看页面源码”（View Page Source）或按 &lt;code>Ctrl + U&lt;/code>。在源码中查找以下关键字：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>React.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>查找&lt;code>react&lt;/code>或&lt;code>ReactDOM&lt;/code>关键字。&lt;/li>
&lt;li>检查是否有以 &lt;code>jsx&lt;/code> 为扩展名的文件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vue.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>查找&lt;code>vue&lt;/code>关键字。&lt;/li>
&lt;li>检查是否有以 &lt;code>vue&lt;/code> 为扩展名的文件。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-使用浏览器开发者工具">2. 使用浏览器开发者工具&lt;/h3>
&lt;p>按 &lt;code>F12&lt;/code> 或右键点击页面并选择“检查”（Inspect），打开开发者工具。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>React.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>在“元素”标签（Elements tab）中，查找是否有包含&lt;code>data-reactroot&lt;/code>属性的HTML元素。&lt;/li>
&lt;li>在“控制台”标签（Console tab）中输入 &lt;code>React&lt;/code> 或 &lt;code>ReactDOM&lt;/code>，看是否返回一个对象而不是 &lt;code>undefined&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Vue.js&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>在“元素”标签中，查找是否有包含&lt;code>data-v-&lt;/code>属性的HTML元素。&lt;/li>
&lt;li>在“控制台”标签中输入 &lt;code>Vue&lt;/code>，看是否返回一个对象而不是 &lt;code>undefined&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-使用浏览器扩展">3. 使用浏览器扩展&lt;/h3>
&lt;p>一些浏览器扩展可以帮助你识别网页是否使用了特定的框架：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>React Developer Tools&lt;/strong>: 可以在页面上显示React组件结构。&lt;/li>
&lt;li>&lt;strong>Vue.js devtools&lt;/strong>: 可以在页面上显示Vue组件结构。&lt;/li>
&lt;/ul>
&lt;h3 id="4-使用在线工具">4. 使用在线工具&lt;/h3>
&lt;p>一些在线工具可以分析网页并告诉你其使用的技术栈，例如：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.wappalyzer.com/" target="_blank" rel="noopener">Wappalyzer&lt;/a>
: 可以识别网页使用的各种技术，包括React.js和Vue.js。&lt;/li>
&lt;li>&lt;a href="https://builtwith.com/" target="_blank" rel="noopener">BuiltWith&lt;/a>
: 提供关于网页技术栈的详细信息。&lt;/li>
&lt;/ul>
&lt;p>通过上述方法，你可以很容易地判断一个网页是使用了React.js还是Vue.js。&lt;/p>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/logo_demo_1.png"
 alt="" 
 loading="lazy"
 width=""
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item></channel></rss>