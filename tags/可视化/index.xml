<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>可视化 on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/</link><description>Recent content in 可视化 on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Tue, 20 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>经济数据</title><link>https://cuisiting.github.io/posts/cuisiting/%E7%BB%8F%E6%B5%8E%E6%95%B0%E6%8D%AE/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E7%BB%8F%E6%B5%8E%E6%95%B0%E6%8D%AE/</guid><description>&lt;p>![[economy_data_1.png]]&lt;br>
&lt;a href="https://sc.macromicro.me/" target="_blank" rel="noopener">https://sc.macromicro.me/&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://www.tradingview.com/chart/iuFHyfXI/" target="_blank" rel="noopener">https://www.tradingview.com/chart/iuFHyfXI/&lt;/a>
&lt;/p>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/data_1_trading_view.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>基于Neo4j构建源码可视化</title><link>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>&lt;h2 id="插入数据">插入数据&lt;/h2>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data_2.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>awesome-visjs demo</title><link>https://cuisiting.github.io/posts/cuisiting/awesome-visjs-demo/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/awesome-visjs-demo/</guid><description>&lt;p>&lt;a href="https://github.com/visjs/awesome-visjs/blob/master/README.md" target="_blank" rel="noopener">https://github.com/visjs/awesome-visjs/blob/master/README.md&lt;/a>
&lt;/p>
&lt;p>&lt;a href="https://js.cytoscape.org/" target="_blank" rel="noopener">https://js.cytoscape.org/&lt;/a>
&lt;br>
&lt;a href="https://js.cytoscape.org/demos/colajs-graph/" target="_blank" rel="noopener">https://js.cytoscape.org/demos/colajs-graph/&lt;/a>
&lt;br>
&lt;a href="https://www.amcharts.com/demos/" target="_blank" rel="noopener">https://www.amcharts.com/demos/&lt;/a>
&lt;br>
&lt;a href="https://www.sigmajs.org/" target="_blank" rel="noopener">https://www.sigmajs.org/&lt;/a>
&lt;/p>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/logo_demo_1.png"
 alt="" 
 loading="lazy"
 width=""
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>Cytoscape.js</title><link>https://cuisiting.github.io/posts/cuisiting/cytoscape.js/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/cytoscape.js/</guid><description>&lt;p>&lt;a href="https://github.com/cytoscape/cytoscape.js" target="_blank" rel="noopener">cytoscape/cytoscape.js: Graph theory (network) library for visualisation and analysis (github.com)&lt;/a>
&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/web_cytoscape_1.png"
 alt="" 
 loading="lazy"
 width=""
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h1 id="heading">&lt;/h1>
&lt;h1 id="heading-1">&lt;/h1>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/logo_demo_1.png"
 alt="" 
 loading="lazy"
 width=""
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>Gradle Dependcy Graph 可视化</title><link>https://cuisiting.github.io/posts/cuisiting/gradle-dependcy-graph-%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Thu, 18 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/gradle-dependcy-graph-%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>&lt;h1 id="buildgradle">build.gradle&lt;/h1>
&lt;pre tabindex="0">&lt;code>...
 
apply from: &amp;#39;depend.gradle&amp;#39;

...
&lt;/code>&lt;/pre>&lt;h1 id="dependgradle">depend.gradle&lt;/h1>
&lt;pre tabindex="0">&lt;code>import groovy.json.JsonOutput 
 
 
class DependencyCounter { 
 static int count = 0 
 static String getCount() { 
 count++ 
 return &amp;#34;$count&amp;#34;; 
 } 
} 
// 定义任务来打印所有模块的依赖并保存为JSON文件 
task printAllModuleDependencies { 
 doLast { 
 def rootResult = [:] 
 rootResult[&amp;#34;name&amp;#34;] = DependencyCounter.getCount() 
 rootResult[&amp;#34;desc&amp;#34;] = &amp;#34;root&amp;#34; 
 def allProjectChildArr = [] 
 rootResult[&amp;#34;children&amp;#34;] = allProjectChildArr 
 allprojects { project -&amp;gt; 
 var item = [:] 
// item[&amp;#34;name&amp;#34;] = project.name 
 item[&amp;#34;name&amp;#34;] = DependencyCounter.getCount() 
 item[&amp;#34;desc&amp;#34;] = &amp;#34;printAllModuleDependencies:&amp;#34;+project.name 
// item[&amp;#34;name&amp;#34;] = project.name 
 item[&amp;#34;children&amp;#34;] = getOneProject(project) 
 allProjectChildArr &amp;lt;&amp;lt; item 
 } 
 
 // 将依赖树写入JSON文件 
 def jsonOutput = JsonOutput.toJson(rootResult) 
// def outputFile = new File(&amp;#34;$buildDir/dependencies.json&amp;#34;) 
 def outputFile = new File(&amp;#34;/Users/cocui/i100/github/EnglishProd/public/data/dependencies.json&amp;#34;) 
 outputFile.text = JsonOutput.prettyPrint(jsonOutput) 
 
 println &amp;#34;Dependencies saved to ${outputFile.absolutePath}&amp;#34; 
 } 
} 
 
def getOneProject(project){ 
 def allChildArr = [] 
 project.configurations.each { config -&amp;gt; 
 var childrenArr= getOneConfig(config) 
 if (childrenArr != null &amp;amp;&amp;amp; childrenArr.size() != 0) { 
 allChildArr &amp;lt;&amp;lt; [ 
 &amp;#34;name&amp;#34;: DependencyCounter.getCount(), 
 &amp;#34;desc&amp;#34;: &amp;#34;getOneProject:&amp;#34;+config.name, 
 &amp;#34;children&amp;#34;: childrenArr 
 ] 
 } 
 } 
 return allChildArr 
} 
 
def getOneConfig(config){ 
 def allChildArr = [] 
 def dependencies = [] 
 if (config.canBeResolved) { // 确保配置可解析 
 if (config.name != &amp;#34;compileClasspath&amp;#34;) { 
 return [] 
 } 
 def visited = new HashSet&amp;lt;String&amp;gt;() 
 def currentConfigurations = [:] 
 try { 
 dependencies = collectDependencies(config.resolvedConfiguration.firstLevelModuleDependencies, visited, 0) 
// projectDependencies[config.name] = dependencies 
// println(&amp;#34;config.name: ${config.name}&amp;#34;) 
//// currentConfigurations[&amp;#34;name&amp;#34;] = config.name 
// currentConfigurations[&amp;#34;name&amp;#34;] = DependencyCounter.getCount() 
// currentConfigurations[&amp;#34;desc&amp;#34;] = &amp;#34;getOneConfig:&amp;#34;+config.name 
// currentConfigurations[&amp;#34;children&amp;#34;] = dependencies 
 
 allChildArr &amp;lt;&amp;lt; currentConfigurations 
 } catch (Exception e) { 
// projectDependencies[config.name] = [ 
// &amp;#34;error&amp;#34;: &amp;#34;Failed to resolve dependencies&amp;#34;, 
// &amp;#34;message&amp;#34;: e.message 
// ] 
 } 
 } 
 return dependencies 
} 
// 递归函数来收集依赖项 
def collectDependencies(Set&amp;lt;ResolvedDependency&amp;gt; dependencies, Set&amp;lt;String&amp;gt; visited, int depth) { 
 def result = [] 
 
 if (depth &amp;gt; 2) { 
// result &amp;lt;&amp;lt; [&amp;#34;dependency&amp;#34;: &amp;#34;... (too deep, stopping recursion)&amp;#34;] 
 return result 
 } 
 
 dependencies.each { dep -&amp;gt; 
 def dependencyKey = &amp;#34;${dep.moduleGroup}:${dep.moduleName}:${dep.moduleVersion}&amp;#34; 
 if (!visited.contains(dependencyKey)) { 
 visited.add(dependencyKey) 
 try { 
 def children = collectDependencies(dep.children, visited, depth + 1) 
 result &amp;lt;&amp;lt; [&amp;#34;name&amp;#34;:DependencyCounter.getCount(),&amp;#34;desc&amp;#34;: dependencyKey, &amp;#34;children&amp;#34;: children] 
 } catch (Exception e) { 
 result &amp;lt;&amp;lt; [&amp;#34;dependency&amp;#34;: dependencyKey, &amp;#34;error&amp;#34;: e.message] 
 } 
 } else { 
// result &amp;lt;&amp;lt; [&amp;#34;dependency&amp;#34;: dependencyKey, &amp;#34;note&amp;#34;: &amp;#34;already visited&amp;#34;] 
 } 
 } 
 
 return result 
}
&lt;/code>&lt;/pr</description></item><item><title>CallTree</title><link>https://cuisiting.github.io/posts/cuisiting/calltree/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/calltree/</guid><description/></item><item><title>Github</title><link>https://cuisiting.github.io/posts/cuisiting/github/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/github/</guid><description>&lt;h1 id="github-most-popular-fork">Github most popular fork&lt;/h1>
&lt;p>&lt;a href="https://gitpop2.vercel.app/" target="_blank" rel="noopener">https://gitpop2.vercel.app/&lt;/a>
&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/github_most_poplular_1.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h1 id="github-star-history-and-compare">Github Star History and Compare&lt;/h1>
&lt;p>&lt;a href="https://star-history.com/#bumptech/glide&amp;amp;facebook/fresco&amp;amp;nostra13/Android-Universal-Image-Loader&amp;amp;square/picasso&amp;amp;coil-kt/coil&amp;amp;Date" target="_blank" rel="noopener">https://star-history.com/#bumptech/glide&amp;facebook/fresco&amp;nostra13/Android-Universal-Image-Loader&amp;square/picasso&amp;coil-kt/coil&amp;Date&lt;/a>
&lt;/p>
&lt;p>Example: Android Image loader library&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/github_start_history_compare_1.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>Vis.js</title><link>https://cuisiting.github.io/posts/cuisiting/vis.js/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/vis.js/</guid><description/></item></channel></rss>