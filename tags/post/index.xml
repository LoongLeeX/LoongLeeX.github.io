<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Post on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/post/</link><description>Recent content in Post on Hugo Theme Tailwind Example Site</description><generator>Hugo 0.125.2</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Wed, 21 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/post/index.xml" rel="self" type="application/rss+xml"/><item><title>模板</title><link>https://cuisiting.github.io/posts/cuisiting/http-get-vs-post/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/cuisiting/http-get-vs-post/</guid><description> 特性 GET 请求 POST 请求 举例说明 数据传输方式 通过 URL 传输数据。数据附加在 URL 后作为查询字符串。 数据放在 HTTP 请求的 body 中。 GET: 访问一个网页时，搜索参数可能会附加在 URL 中。 POST: 提交表单时，表单数据会包含在请求体中。 安全性 较低，数据在 URL 中明文传输，容易被拦截。 较高，数据不会直接暴露在 URL 中，但仍需加密措施保护。 GET: 密码或敏感信息不应通过 URL 传递。 POST: 在线支付信息通常通过 POST 提交以保护数据。 可缓存性 可以被浏览器或代理服务器缓存。 通常不被缓存。 GET: 静态资源请求，如图片或 CSS 文件，可以被缓存以加快加载速度。 POST: 用户提交的表单数据不应被缓存。 历史记录 请求的 URL 会保存在浏览器历史记录里，数据可见。 请求不会保存在浏览器历史记录里，数据不直接可见。 GET: 搜索引擎查询的 URL 可以从浏览器历史中直接访问。 POST: 用户登录信息提交后，不会出现在历史记录中。 用途 适用于请求数据。 适用于更新数据。 GET: 获取某个页面或者文章信息。 POST: 在线注册账户时提交用户信息。 数据大小限制 由于 URL 长度限制，传输的数据量相对较小。 理论上没有大小限制，可以传输大量数据。 GET: URL 通常受浏览器或服务器限制在几千字符内。 POST: 上传大文件，如视频或大型文档。 幂等性 是幂等的，多次请求不会改变资源状态。 通常不是幂等的，多次请求可能会改变资源状态。 GET: 多次刷新新闻页面，内容不变。 POST: 多次提交订单，可能会创建多个订单。</description></item></channel></rss>