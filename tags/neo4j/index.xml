<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Neo4j on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/neo4j/</link><description>Recent content in Neo4j on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Tue, 23 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/neo4j/index.xml" rel="self" type="application/rss+xml"/><item><title>基于Neo4j构建源码可视化</title><link>https://cuisiting.github.io/posts/external/md/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>&lt;h2 id="插入数据">插入数据&lt;/h2>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data_2.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h2 id="查询所有节点">查询所有节点&lt;/h2>
&lt;pre tabindex="0">&lt;code>MATCH (n)
RETURN n
&lt;/code>&lt;/pre>&lt;h2 id="查询两个节点之间的直接间接关系和节点">查询两个节点之间的直接&amp;amp;间接关系和节点&lt;/h2>
&lt;pre tabindex="0">&lt;code>MATCH path = (a)-[*]-(b)

WHERE a.name = &amp;#39;your_nodo_name_1&amp;#39; AND

b.name = &amp;#39;your_nodo_name_2&amp;#39;

RETURN path
&lt;/code>&lt;/pre></description></item><item><title>基于Neo4j构建源码可视化</title><link>https://cuisiting.github.io/posts/external/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/%E5%9F%BA%E4%BA%8Eneo4j%E6%9E%84%E5%BB%BA%E6%BA%90%E7%A0%81%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>&lt;h2 id="插入数据">插入数据&lt;/h2>
&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;br>



&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/neo4j_insert_data_2.png"
 alt="img#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h2 id="查询所有节点">查询所有节点&lt;/h2>
&lt;pre tabindex="0">&lt;code>MATCH (n)
RETURN n
&lt;/code>&lt;/pre>&lt;h2 id="查询两个节点之间的直接间接关系和节点">查询两个节点之间的直接&amp;amp;间接关系和节点&lt;/h2>
&lt;pre tabindex="0">&lt;code>MATCH path = (a)-[*]-(b)

WHERE a.name = &amp;#39;your_nodo_name_1&amp;#39; AND

b.name = &amp;#39;your_nodo_name_2&amp;#39;

RETURN path
&lt;/code>&lt;/pre></description></item><item><title>Neo4j</title><link>https://cuisiting.github.io/posts/external/md/neo4j/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/neo4j/</guid><description>&lt;h1 id="neo4j-查看所有节点">neo4j 查看所有节点&lt;/h1>
&lt;pre tabindex="0">&lt;code>MATCH (n) 
RETURN n
&lt;/code>&lt;/pre>&lt;h1 id="neo4j-查看所有节点和关系">neo4j 查看所有节点和关系&lt;/h1>
&lt;pre tabindex="0">&lt;code>MATCH (n)-[r]-&amp;gt;(m)
RETURN n, r, m
&lt;/code>&lt;/pre></description></item><item><title>Neo4j</title><link>https://cuisiting.github.io/posts/external/neo4j/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/neo4j/</guid><description>&lt;h1 id="neo4j-查看所有节点">neo4j 查看所有节点&lt;/h1>
&lt;pre tabindex="0">&lt;code>MATCH (n) 
RETURN n
&lt;/code>&lt;/pre>&lt;h1 id="neo4j-查看所有节点和关系">neo4j 查看所有节点和关系&lt;/h1>
&lt;pre tabindex="0">&lt;code>MATCH (n)-[r]-&amp;gt;(m)
RETURN n, r, m
&lt;/code>&lt;/pre></description></item><item><title>向量数据库 vs 图数据库</title><link>https://cuisiting.github.io/posts/external/md/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>维度&lt;/th>
 &lt;th>图数据库&lt;/th>
 &lt;th>向量数据库&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>解决方案&lt;/strong>&lt;/td>
 &lt;td>解决复杂关系和网络的分析问题&lt;/td>
 &lt;td>解决高维数据的相似性搜索和检索问题&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>流行框架&lt;/strong>&lt;/td>
 &lt;td>Neo4j, ArangoDB, OrientDB, Amazon Neptune&lt;/td>
 &lt;td>Milvus, Faiss, Annoy, Pinecone&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>杀手级应用&lt;/strong>&lt;/td>
 &lt;td>社交网络分析, 路径查找, 网络拓扑, 推荐系统&lt;/td>
 &lt;td>推荐系统, 图像识别, 语音识别, 自然语言处理&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>优点&lt;/strong>&lt;/td>
 &lt;td>强大的关系处理能力，优化的关系遍历性能&lt;/td>
 &lt;td>高效的相似性搜索，适合处理大规模多维数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>缺点&lt;/strong>&lt;/td>
 &lt;td>相对较高的复杂性和学习曲线&lt;/td>
 &lt;td>数据维度的增加可能导致性能下降（维度诅咒）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>底层框架&lt;/strong>&lt;/td>
 &lt;td>基于Apache Lucene进行索引和存储的优化&lt;/td>
 &lt;td>通常使用特定的数据结构如KD树、球树等进行数据索引和搜索&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>原理&lt;/strong>&lt;/td>
 &lt;td>利用图论概念，数据以节点和边的形式存在，边表示节点间的关系&lt;/td>
 &lt;td>利用距离或相似度度量（如欧氏距离、余弦相似度）来索引和查询向量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>用途&lt;/strong>&lt;/td>
 &lt;td>关系重的数据应用，如网络分析，关系数据库&lt;/td>
 &lt;td>面向特征向量的搜索和分析应用，如图像和文本数据库&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>性能&lt;/strong>&lt;/td>
 &lt;td>高效的关系遍历和图算法性能&lt;/td>
 &lt;td>高效的相似性搜索性能，尤其是在低至中等维度的数据集上&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>数据模型&lt;/strong>&lt;/td>
 &lt;td>节点和边构成的网络结构&lt;/td>
 &lt;td>高维空间中的点集，每个点代表数据集中的一个项目&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>数据存储方式&lt;/strong>&lt;/td>
 &lt;td>节点和边直接存储在图结构中&lt;/td>
 &lt;td>向量通常存储在特定的数据结构中以优化搜索性能&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>查询语言&lt;/strong>&lt;/td>
 &lt;td>使用专门的图查询语言如Cypher&lt;/td>
 &lt;td>使用基于距离的查询参数，有时借助 SQL-like 查询语言&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>扩展性&lt;/strong>&lt;/td>
 &lt;td>良好的水平扩展性，尤其是在处理复杂查询和大数据集时&lt;/td>
 &lt;td>依赖于数据结构和实现，高维数据集扩展可能具有挑战性&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>事务支持&lt;/strong>&lt;/td>
 &lt;td>通常提供良好的事务支持，保证数据的一致性和完整性&lt;/td>
 &lt;td>事务支持因实现而异，一些系统可能主要优化读性能而非写性能&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>向量数据库 vs 图数据库</title><link>https://cuisiting.github.io/posts/external/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/%E5%90%91%E9%87%8F%E6%95%B0%E6%8D%AE%E5%BA%93-vs-%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93/</guid><description>&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>维度&lt;/th>
 &lt;th>图数据库&lt;/th>
 &lt;th>向量数据库&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>解决方案&lt;/strong>&lt;/td>
 &lt;td>解决复杂关系和网络的分析问题&lt;/td>
 &lt;td>解决高维数据的相似性搜索和检索问题&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>流行框架&lt;/strong>&lt;/td>
 &lt;td>Neo4j, ArangoDB, OrientDB, Amazon Neptune&lt;/td>
 &lt;td>Milvus, Faiss, Annoy, Pinecone&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>杀手级应用&lt;/strong>&lt;/td>
 &lt;td>社交网络分析, 路径查找, 网络拓扑, 推荐系统&lt;/td>
 &lt;td>推荐系统, 图像识别, 语音识别, 自然语言处理&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>优点&lt;/strong>&lt;/td>
 &lt;td>强大的关系处理能力，优化的关系遍历性能&lt;/td>
 &lt;td>高效的相似性搜索，适合处理大规模多维数据&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>缺点&lt;/strong>&lt;/td>
 &lt;td>相对较高的复杂性和学习曲线&lt;/td>
 &lt;td>数据维度的增加可能导致性能下降（维度诅咒）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>底层框架&lt;/strong>&lt;/td>
 &lt;td>基于Apache Lucene进行索引和存储的优化&lt;/td>
 &lt;td>通常使用特定的数据结构如KD树、球树等进行数据索引和搜索&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>原理&lt;/strong>&lt;/td>
 &lt;td>利用图论概念，数据以节点和边的形式存在，边表示节点间的关系&lt;/td>
 &lt;td>利用距离或相似度度量（如欧氏距离、余弦相似度）来索引和查询向量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>用途&lt;/strong>&lt;/td>
 &lt;td>关系重的数据应用，如网络分析，关系数据库&lt;/td>
 &lt;td>面向特征向量的搜索和分析应用，如图像和文本数据库&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>性能&lt;/strong>&lt;/td>
 &lt;td>高效的关系遍历和图算法性能&lt;/td>
 &lt;td>高效的相似性搜索性能，尤其是在低至中等维度的数据集上&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>数据模型&lt;/strong>&lt;/td>
 &lt;td>节点和边构成的网络结构&lt;/td>
 &lt;td>高维空间中的点集，每个点代表数据集中的一个项目&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>数据存储方式&lt;/strong>&lt;/td>
 &lt;td>节点和边直接存储在图结构中&lt;/td>
 &lt;td>向量通常存储在特定的数据结构中以优化搜索性能&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>查询语言&lt;/strong>&lt;/td>
 &lt;td>使用专门的图查询语言如Cypher&lt;/td>
 &lt;td>使用基于距离的查询参数，有时借助 SQL-like 查询语言&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>扩展性&lt;/strong>&lt;/td>
 &lt;td>良好的水平扩展性，尤其是在处理复杂查询和大数据集时&lt;/td>
 &lt;td>依赖于数据结构和实现，高维数据集扩展可能具有挑战性&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>事务支持&lt;/strong>&lt;/td>
 &lt;td>通常提供良好的事务支持，保证数据的一致性和完整性&lt;/td>
 &lt;td>事务支持因实现而异，一些系统可能主要优化读性能而非写性能&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>基于 Neo4j 构建 Java 工程代码CallTree Graph</title><link>https://cuisiting.github.io/posts/external/md/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</guid><description>&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/drawio/Neo4jCallTree.drawio.svg"
 alt="d#width=50%&amp;amp;height=100" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item><item><title>基于 Neo4j 构建 Java 工程代码CallTree Graph</title><link>https://cuisiting.github.io/posts/external/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</link><pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/%E5%9F%BA%E4%BA%8E-neo4j-%E6%9E%84%E5%BB%BA-java-%E5%B7%A5%E7%A8%8B%E4%BB%A3%E7%A0%81calltree-graph/</guid><description>&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/drawio/Neo4jCallTree.drawio.svg"
 alt="d#width=50%&amp;amp;height=100" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p></description></item></channel></rss>