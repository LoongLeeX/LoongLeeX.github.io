<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>单词关系 on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/</link><description>Recent content in 单词关系 on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Mon, 10 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/index.xml" rel="self" type="application/rss+xml"/><item><title>查询单词关系</title><link>https://cuisiting.github.io/posts/external/md/%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/</guid><description>&lt;p>要查找一个单词的编辑距离为一的所有单词，可以使用以下几个网站和工具：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Datamuse&lt;/strong> - 这个网站提供了一个丰富的API，可以查找相似单词，包括编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>网站链接: &lt;a href="https://www.datamuse.com/" target="_blank" rel="noopener">Datamuse&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用方法: 可以通过API查询相似单词，如：&lt;/p>
&lt;p>arduino&lt;/p>
&lt;p>Copy code&lt;/p>
&lt;p>&lt;code>https://api.datamuse.com/words?sp=word&amp;amp;md=d&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>OneLook&lt;/strong> - 这是一个词典和词汇搜索引擎，可以查找与给定单词编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>网站链接: &lt;a href="https://www.onelook.com/" target="_blank" rel="noopener">OneLook&lt;/a>
&lt;/li>
&lt;li>使用方法: 输入单词后，可以使用“wildcard search”功能来查找编辑距离为一的单词。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Levenshtein Distance Tool&lt;/strong> - 这是一个专门用于计算编辑距离的工具，可以找到编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>网站链接: Levenshtein Distance Tool&lt;/li>
&lt;li>使用方法: 输入两个单词，工具会计算它们之间的编辑距离。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Python NLTK Library&lt;/strong> - 如果你熟悉编程，可以使用Python的NLTK库，它提供了计算编辑距离的功能，可以用来查找编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用方法: 安装NLTK库后，可以使用以下代码：&lt;/p>
&lt;p>python&lt;/p>
&lt;p>Copy code&lt;/p>
&lt;p>&lt;code>import nltk from nltk.corpus import words nltk.download('words') def edit_distance_one(word): word_list = words.words() return [w for w in word_list if nltk.edit_distance(word, w) == 1] result = edit_distance_one(&amp;quot;example&amp;quot;) print(result)&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这些工具和网站可以帮助你查找与给定单词编辑距离为一的所有单词。&lt;/p></description></item><item><title>查询单词关系</title><link>https://cuisiting.github.io/posts/external/%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/</link><pubDate>Mon, 10 Jun 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/%E6%9F%A5%E8%AF%A2%E5%8D%95%E8%AF%8D%E5%85%B3%E7%B3%BB/</guid><description>&lt;p>要查找一个单词的编辑距离为一的所有单词，可以使用以下几个网站和工具：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>Datamuse&lt;/strong> - 这个网站提供了一个丰富的API，可以查找相似单词，包括编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>网站链接: &lt;a href="https://www.datamuse.com/" target="_blank" rel="noopener">Datamuse&lt;/a>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用方法: 可以通过API查询相似单词，如：&lt;/p>
&lt;p>arduino&lt;/p>
&lt;p>Copy code&lt;/p>
&lt;p>&lt;code>https://api.datamuse.com/words?sp=word&amp;amp;md=d&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>OneLook&lt;/strong> - 这是一个词典和词汇搜索引擎，可以查找与给定单词编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>网站链接: &lt;a href="https://www.onelook.com/" target="_blank" rel="noopener">OneLook&lt;/a>
&lt;/li>
&lt;li>使用方法: 输入单词后，可以使用“wildcard search”功能来查找编辑距离为一的单词。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Levenshtein Distance Tool&lt;/strong> - 这是一个专门用于计算编辑距离的工具，可以找到编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>网站链接: Levenshtein Distance Tool&lt;/li>
&lt;li>使用方法: 输入两个单词，工具会计算它们之间的编辑距离。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Python NLTK Library&lt;/strong> - 如果你熟悉编程，可以使用Python的NLTK库，它提供了计算编辑距离的功能，可以用来查找编辑距离为一的单词。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>使用方法: 安装NLTK库后，可以使用以下代码：&lt;/p>
&lt;p>python&lt;/p>
&lt;p>Copy code&lt;/p>
&lt;p>&lt;code>import nltk from nltk.corpus import words nltk.download('words') def edit_distance_one(word): word_list = words.words() return [w for w in word_list if nltk.edit_distance(word, w) == 1] result = edit_distance_one(&amp;quot;example&amp;quot;) print(result)&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>这些工具和网站可以帮助你查找与给定单词编辑距离为一的所有单词。&lt;/p></description></item></channel></rss>