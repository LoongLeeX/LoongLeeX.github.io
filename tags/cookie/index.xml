<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cookie on Hugo Theme Tailwind Example Site</title><link>https://cuisiting.github.io/tags/cookie/</link><description>Recent content in Cookie on Hugo Theme Tailwind Example Site</description><generator>Hugo</generator><language>en</language><copyright>Cuisiting</copyright><lastBuildDate>Tue, 12 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cuisiting.github.io/tags/cookie/index.xml" rel="self" type="application/rss+xml"/><item><title>WebPageData2</title><link>https://cuisiting.github.io/posts/external/md/webpagedata2/</link><pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/md/webpagedata2/</guid><description>&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/blog/javascript_cookie_data_1.png"
 alt="image#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h1 id="对比">对比&lt;/h1>
&lt;p>LocalStorage、SessionStorage、IndexedDB和Cookies四种客户端存储技术的关键特性：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>特性&lt;/th>
 &lt;th>LocalStorage&lt;/th>
 &lt;th>SessionStorage&lt;/th>
 &lt;th>IndexedDB&lt;/th>
 &lt;th>Cookies&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>数据生命周期&lt;/td>
 &lt;td>持久存储，除非用户或脚本手动删除&lt;/td>
 &lt;td>页面会话期间，窗口或标签页关闭则数据消失&lt;/td>
 &lt;td>持久存储，除非用户或脚本手动删除&lt;/td>
 &lt;td>设置的有效期内，或直至手动删除&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>存储容量&lt;/td>
 &lt;td>约5MB&lt;/td>
 &lt;td>约5MB&lt;/td>
 &lt;td>无明确限制，但可能受硬盘容量影响&lt;/td>
 &lt;td>每个cookie最大约4KB，每个域名限制数量不同&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>访问性&lt;/td>
 &lt;td>同源策略限制&lt;/td>
 &lt;td>同源策略限制，仅限当前页面会话&lt;/td>
 &lt;td>同源策略限制&lt;/td>
 &lt;td>所有请求都会携带，可跨域（如果设置了&lt;code>Domain&lt;/code>属性）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>数据格式&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;td>支持多种数据格式，包括二进制数据&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>与服务器通信&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>自动随每个HTTP请求发送到服务器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>使用场景&lt;/td>
 &lt;td>长期保存大量数据（如用户偏好设置）&lt;/td>
 &lt;td>单页面会话数据（如表单输入）&lt;/td>
 &lt;td>大型数据集合，如离线应用数据&lt;/td>
 &lt;td>身份验证，跟踪用户会话&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>安全性&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>较低，特别是未设置HttpOnly标志时容易受到CSRF攻击&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>**LocalStorage ** or &lt;strong>SessionStorage&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>// 设置localStorage
localStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;localStorage value顶顶顶顶的点点滴滴&amp;#39;);

// 设置sessionStorage
sessionStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;设置sessionStorage value顶顶顶顶的点点滴滴&amp;#39;);


// 获取sessionStorage
var sessionData = sessionStorage.getItem(&amp;#39;key&amp;#39;);
 
// 获取localStorage
var localStorageData = localStorage.getItem(&amp;#39;key&amp;#39;);
 

console.log(&amp;#34;localStorageData:&amp;#34;+localStorageData);
console.log(&amp;#34;sessionData:&amp;#34;+sessionData);
&lt;/code>&lt;/pre>&lt;h1 id="从浏览器中查看支持的数据存储方式">从浏览器中查看支持的数据存储方式&lt;/h1>
&lt;p>![[javascript_cookie_data_1.png]]&lt;/p></description></item><item><title>WebPageData2</title><link>https://cuisiting.github.io/posts/external/webpagedata2/</link><pubDate>Tue, 12 Mar 2024 00:00:00 +0000</pubDate><guid>https://cuisiting.github.io/posts/external/webpagedata2/</guid><description>&lt;p>


&lt;div class="not-prose">
&lt;figure>
 &lt;img src="https://cuisiting.github.io/bi/blog/javascript_cookie_data_1.png"
 alt="image#width=50%" 
 loading="lazy"
 width="50%"
 >
 &lt;/figure>&lt;/div>
&lt;/p>
&lt;h1 id="对比">对比&lt;/h1>
&lt;p>LocalStorage、SessionStorage、IndexedDB和Cookies四种客户端存储技术的关键特性：&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>特性&lt;/th>
 &lt;th>LocalStorage&lt;/th>
 &lt;th>SessionStorage&lt;/th>
 &lt;th>IndexedDB&lt;/th>
 &lt;th>Cookies&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>数据生命周期&lt;/td>
 &lt;td>持久存储，除非用户或脚本手动删除&lt;/td>
 &lt;td>页面会话期间，窗口或标签页关闭则数据消失&lt;/td>
 &lt;td>持久存储，除非用户或脚本手动删除&lt;/td>
 &lt;td>设置的有效期内，或直至手动删除&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>存储容量&lt;/td>
 &lt;td>约5MB&lt;/td>
 &lt;td>约5MB&lt;/td>
 &lt;td>无明确限制，但可能受硬盘容量影响&lt;/td>
 &lt;td>每个cookie最大约4KB，每个域名限制数量不同&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>访问性&lt;/td>
 &lt;td>同源策略限制&lt;/td>
 &lt;td>同源策略限制，仅限当前页面会话&lt;/td>
 &lt;td>同源策略限制&lt;/td>
 &lt;td>所有请求都会携带，可跨域（如果设置了&lt;code>Domain&lt;/code>属性）&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>数据格式&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;td>支持多种数据格式，包括二进制数据&lt;/td>
 &lt;td>字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>与服务器通信&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>不自动发送，需要通过AJAX/Fetch等手动发送&lt;/td>
 &lt;td>自动随每个HTTP请求发送到服务器&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>使用场景&lt;/td>
 &lt;td>长期保存大量数据（如用户偏好设置）&lt;/td>
 &lt;td>单页面会话数据（如表单输入）&lt;/td>
 &lt;td>大型数据集合，如离线应用数据&lt;/td>
 &lt;td>身份验证，跟踪用户会话&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>安全性&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>相对较高，但需防止XSS攻击&lt;/td>
 &lt;td>较低，特别是未设置HttpOnly标志时容易受到CSRF攻击&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>**LocalStorage ** or &lt;strong>SessionStorage&lt;/strong>&lt;/p>
&lt;pre tabindex="0">&lt;code>// 设置localStorage
localStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;localStorage value顶顶顶顶的点点滴滴&amp;#39;);

// 设置sessionStorage
sessionStorage.setItem(&amp;#39;key&amp;#39;, &amp;#39;设置sessionStorage value顶顶顶顶的点点滴滴&amp;#39;);


// 获取sessionStorage
var sessionData = sessionStorage.getItem(&amp;#39;key&amp;#39;);
 
// 获取localStorage
var localStorageData = localStorage.getItem(&amp;#39;key&amp;#39;);
 

console.log(&amp;#34;localStorageData:&amp;#34;+localStorageData);
console.log(&amp;#34;sessionData:&amp;#34;+sessionData);
&lt;/code>&lt;/pre>&lt;h1 id="从浏览器中查看支持的数据存储方式">从浏览器中查看支持的数据存储方式&lt;/h1>
&lt;p>![[javascript_cookie_data_1.png]]&lt;/p></description></item></channel></rss>